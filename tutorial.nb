(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    148083,       2701]
NotebookOptionsPosition[    127526,       2251]
NotebookOutlinePosition[    146283,       2667]
CellTagsIndexPosition[    146240,       2664]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["AI Based Organ Detection", "Title",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.953003261733726*^9, {3.95300460417626*^9, 
   3.953004616736231*^9}},ExpressionUUID->"93fcdfb1-a583-49fc-bc07-\
d93de6df1881"],

Cell["Gruppo numero 1: Morgan ", "Subtitle",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003474049737*^9, 3.953003484651434*^9}, {
  3.9530045631258287`*^9, 3.953004568142741*^9}},
 FontColor->RGBColor[
  0.7498130769817655, 0., 
   0.03247119859616999],ExpressionUUID->"c651d3da-35f1-417d-8300-\
82372e659e11"],

Cell[TextData[StyleBox["MC 2024/2025",
 FontColor->RGBColor[
  0.7448386358434425, 0., 0.01271076523994812]]], "Subtitle",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003573527338*^9, 3.953003577125852*^9}, {
  3.953003651797236*^9, 
  3.953003656006226*^9}},ExpressionUUID->"848a9044-d4e5-4e85-af1f-\
0f327b6d8446"],

Cell["FOTO1 FOTO2 FOTO3 FTO4 FOTO5", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.9530036651012907`*^9, 
  3.9530036873334713`*^9}},ExpressionUUID->"f4a9fc12-c802-4fd6-83ce-\
68766b8ecc86"],

Cell[TextData[StyleBox["Giuseppe Spathis, Matteo Fontana, Federico Augelli, \
Emanuele di Sante, Alessandro Mencarelli",
 FontColor->RGBColor[0.7496757457846952, 0., 0.03179980163271534]]], "Author",\

 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003704746303*^9, 3.953003733491577*^9}, {
  3.953004499788789*^9, 
  3.953004504095313*^9}},ExpressionUUID->"78fad76d-2c59-488e-a333-\
3816a8d4e9b1"],

Cell[TextData[StyleBox["(anno 1, curriculum C), (anno 1, curriculum A), (anno \
2, curriculum A) (anno 1, cirriculum A) (anno 1, curriculum A)",
 FontColor->RGBColor[0.7448386358434425, 0., 0.02374303807125963]]], "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003950627871*^9, 3.9530039664070063`*^9}, {
  3.9530040032182293`*^9, 3.953004057822535*^9}, {3.953004513350209*^9, 
  3.9530045375131807`*^9}, {3.953009050826796*^9, 
  3.953009051460822*^9}},ExpressionUUID->"0f600f28-f76c-4d81-99bb-\
0adf37b5827e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", "\n", "    ", 
    RowBox[{
     RowBox[{"file", " ", "=", " ", "\"\<\>\""}], ",", "\n", "    ", 
     RowBox[{"result", " ", "=", " ", "\"\<\>\""}], ",", "\n", "    ", 
     RowBox[{"fileSet", " ", "=", " ", "False"}], ",", "\n", "    ", 
     RowBox[{"errorMsg", " ", "=", " ", "\"\<\>\""}], ",", "\n", "    ", 
     RowBox[{"imgPreview", " ", "=", " ", "None"}], ",", "\n", "    ", 
     "updateFileState"}], "\n", "  ", "}"}], ",", "\n", "\n", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", 
     RowBox[{"function", ":", " ", 
      RowBox[{"Accetta", " ", "solo", " ", 
       RowBox[{
        RowBox[{"PNG", "/", "JPG"}], "/", "JPEG"}]}]}]}], " ", "*)"}], "\n", 
   "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"updateFileState", "[", "newFile_String", "]"}], " ", ":=", " ", 
     RowBox[{"(", "\n", "    ", 
      RowBox[{
       RowBox[{"file", " ", "=", " ", "newFile"}], ";", "\n", "    ", 
       RowBox[{"errorMsg", " ", "=", " ", "\"\<\>\""}], ";", "\n", "    ", 
       RowBox[{"imgPreview", " ", "=", " ", "None"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Reset", " ", "preview"}], " ", "*)"}], "\n", "    ", 
       RowBox[{"fileSet", " ", "=", " ", "False"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Reset", " ", "file", " ", "status"}], " ", "*)"}], "\n", 
       "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTrim", "[", "file", "]"}], " ", "==", 
          " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exit", " ", "if", " ", "file", " ", "path", " ", "is", " ", 
         "empty"}], " ", "*)"}], "\n", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "[", "file", "]"}], ",", "\n", "      ", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ext", " ", "=", " ", 
              RowBox[{"ToLowerCase", "@", 
               RowBox[{"FileExtension", "[", "file", "]"}]}]}], ",", " ", 
             "importedContent"}], "}"}], ",", "\n", "        ", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"StringMatchQ", "[", 
               RowBox[{"ext", ",", " ", 
                
                RowBox[{"\"\<png\>\"", " ", "|", " ", "\"\<jpg\>\"", " ", "|",
                  " ", "\"\<jpeg\>\""}]}], "]"}], ",", "\n", "          ", 
              RowBox[{
               RowBox[{"Check", "[", "\n", "            ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"importedContent", " ", "=", " ", 
                   RowBox[{"Import", "[", "file", "]"}]}], ";", "\n", 
                  "            ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"ImageQ", "[", "importedContent", "]"}], ",", 
                    "\n", "              ", 
                    RowBox[{
                    RowBox[{"imgPreview", " ", "=", " ", "importedContent"}], 
                    ";", "\n", "              ", 
                    RowBox[{"fileSet", " ", "=", " ", "True"}], ";"}], ",", 
                    "\n", "              ", 
                    RowBox[{
                    RowBox[{
                    "errorMsg", " ", "=", 
                    " ", "\"\<\:274c File non \[EGrave] un'immagine PNG/JPG \
valida.\>\""}], ";"}]}], "\n", "            ", "]"}]}], ",", "\n", 
                 "            ", 
                 RowBox[{
                  RowBox[{
                  "errorMsg", " ", "=", 
                   " ", "\"\<\:274c Errore durante l'importazione \
dell'immagine.\>\""}], ";", "\n", "            ", 
                  RowBox[{"imgPreview", " ", "=", " ", "None"}], ";"}]}], 
                "\n", "          ", "]"}], ";"}], "\n", "        ", ",", "\n",
               "          ", 
              RowBox[{
               RowBox[{
               "errorMsg", " ", "=", 
                
                " ", "\"\<\:274c Tipo file non supportato (solo .png, .jpg, \
.jpeg).\>\""}], ";", "\n", "          ", 
               RowBox[{"imgPreview", " ", "=", " ", "None"}], ";"}]}], "\n", 
             "        ", "]"}], ";"}]}], "\n", "      ", "]"}], ",", "\n", 
         "      ", 
         RowBox[{
          RowBox[{
          "errorMsg", " ", "=", " ", "\"\<\:274c File non trovato.\>\""}], ";",
           "\n", "      ", 
          RowBox[{"imgPreview", " ", "=", " ", "None"}], ";"}]}], "\n", 
        "    ", "]"}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"errorMsg", " ", "=!=", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"fileSet", " ", "=", " ", "False"}]}], "]"}], ";"}], "\n", 
      "  ", ")"}]}], ";", "\n", "  ", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Implementazione", " ", "della", " ", "funzione", " ", "organDetect"}], 
      " ", "-", " ", 
      RowBox[{
      "definita", " ", "localmente", " ", "per", " ", 
       "semplicit\[AGrave]"}]}], " ", "*)"}], "\n", "  ", 
    RowBox[{
     RowBox[{"organDetect", "[", "imagePath_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"img", ",", " ", "detectionResult"}], "}"}], ",", "\n", 
       "    ", 
       RowBox[{
        RowBox[{"img", " ", "=", " ", 
         RowBox[{"Import", "[", "imagePath", "]"}]}], ";", "\n", "    ", "\n",
         "    ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Qui", " ", "inserire", " ", "il", " ", "codice", " ", "per", " ", 
          "il", " ", "rilevamento", " ", "degli", " ", "organi"}], " ", 
         "*)"}], "\n", "    ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Per", " ", "ora", " ", "restituisce", " ", "un", " ", "messaggio", " ",
           "di", " ", "esempio"}], " ", "*)"}], "\n", "    ", 
        RowBox[{"detectionResult", " ", "=", " ", 
         RowBox[{"\"\<\:2705 Rilevamento completato per: \>\"", " ", "<>", 
          " ", 
          RowBox[{"FileNameTake", "[", "imagePath", "]"}], " ", "<>", " ", 
          "\n", "                     ", "\"\<\\n\\nOrgani rilevati:\\n- \
Tiroide: 101%\>\""}]}], ";", "\n", "    ", "\n", "    ", 
        RowBox[{"Return", "[", "detectionResult", "]"}], ";"}]}], "\n", "  ", 
      "]"}]}], ";", "\n", "  ", "\n", "  ", 
    RowBox[{"updateFileState", "[", "\"\<\>\"", "]"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Initialize", " ", "state"}], " ", "*)"}], "\n", "\n", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"Create", " ", "the", " ", "Dialog", " ", "UI"}], " ", "*)"}], 
    "\n", "  ", 
    RowBox[{"CreateDialog", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"Panel", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\n", "          ", 
           RowBox[{
            RowBox[{"Style", "[", 
             
             RowBox[{"\"\<\|01f9e0 Organ Detection Tool\>\"", ",", " ", "26", 
              ",", " ", "Bold", ",", " ", 
              RowBox[{"FontFamily", " ", "->", " ", "\"\<Helvetica\>\""}]}], 
             "]"}], ",", "\n", "          ", 
            RowBox[{"Spacer", "[", "10", "]"}], ",", "\n", "          ", "\n",
             "          ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Selezione", " ", "file", " ", "con", " ", "FileNameSetter"}], 
             " ", "*)"}], "\n", "          ", 
            RowBox[{"Row", "[", 
             RowBox[{"{", "\n", "            ", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Seleziona immagine: \>\"", ",", " ", "14"}], 
                "]"}], ",", "\n", "            ", 
               RowBox[{"FileNameSetter", "[", "\n", "              ", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"file", ",", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"updateFileState", "[", "#", "]"}], ")"}], 
                    "&"}]}], "]"}], ",", "\n", 
                 "              ", "\"\<Open\>\"", ",", "\n", 
                 "              ", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Immagini\>\"", " ", "->", " ", 
                   RowBox[{"{", 
                    
                    RowBox[{"\"\<*.png\>\"", ",", " ", "\"\<*.jpg\>\"", ",", 
                    " ", "\"\<*.jpeg\>\""}], "}"}]}], "}"}], ",", "\n", 
                 "              ", 
                 RowBox[{"ButtonData", " ", "->", " ", "Automatic"}], ",", 
                 "\n", "              ", 
                 RowBox[{
                 "ButtonNote", " ", "->", 
                  " ", "\"\<Seleziona un'immagine (.png, .jpg, \
.jpeg)\>\""}]}], "\n", "            ", "]"}]}], "\n", "          ", "}"}], 
             "]"}], ",", "\n", "          ", "\n", "          ", 
            RowBox[{"(*", " ", 
             RowBox[{"Display", " ", "stato", " ", "file"}], " ", "*)"}], 
            "\n", "          ", 
            RowBox[{"Dynamic", "[", "\n", "            ", 
             RowBox[{"If", "[", 
              RowBox[{"fileSet", ",", "\n", "              ", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"\"\<\:2705 File selezionato: \>\"", " ", "<>", " ", 
                  RowBox[{"FileNameTake", "[", "file", "]"}]}], ",", " ", 
                 RowBox[{"Darker", "@", "Green"}]}], "]"}], ",", "\n", 
               "              ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"errorMsg", " ", "!=", " ", "\"\<\>\""}], ",", " ", 
                 RowBox[{"Style", "[", 
                  RowBox[{"errorMsg", ",", " ", "Red"}], "]"}], ",", 
                 " ", "\"\<\>\""}], "]"}]}], "\n", "            ", "]"}], 
             "\n", "          ", "]"}], ",", "\n", "          ", "\n", 
            "          ", 
            RowBox[{"Spacer", "[", "10", "]"}], ",", "\n", "          ", "\n",
             "          ", 
            RowBox[{"(*", " ", 
             RowBox[{"Image", " ", "Preview", " ", "Section"}], " ", "*)"}], 
            "\n", "          ", 
            RowBox[{"Dynamic", "[", "\n", "            ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ImageQ", "[", "imgPreview", "]"}], ",", "\n", 
               "              ", 
               RowBox[{"Column", "[", 
                RowBox[{"{", "\n", "                ", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   
                   RowBox[{"\"\<Anteprima:\>\"", ",", " ", "Italic", ",", " ",
                     "14"}], "]"}], ",", " ", "\n", "                ", 
                  RowBox[{"Image", "[", 
                   RowBox[{"imgPreview", ",", " ", 
                    RowBox[{"ImageSize", " ", "->", " ", "300"}]}], "]"}]}], 
                 "\n", "              ", "}"}], "]"}], ",", "\n", 
               "              ", "\"\<\>\""}], "]"}], "\n", "          ", 
             "]"}], ",", "\n", "\n", "          ", 
            RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", "          ", "\n",
             "          ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Bottone", " ", "per", " ", "eseguire", " ", "il", " ", 
              "rilevamento"}], " ", "*)"}], "\n", "          ", 
            RowBox[{"Button", "[", "\n", "            ", 
             
             RowBox[{"\"\<Esegui Organ Detection\>\"", ",", "\n", 
              "            ", 
              RowBox[{"If", "[", 
               RowBox[{"fileSet", ",", "\n", "              ", 
                RowBox[{"result", " ", "=", " ", 
                 RowBox[{"organDetect", "[", "file", "]"}]}], ",", "\n", 
                "              ", 
                RowBox[{
                "result", " ", "=", 
                 " ", "\"\<\:26a0\:fe0f Seleziona prima un file .png, .jpg, \
.jpeg valido.\>\""}]}], "\n", "            ", "]"}], ",", "\n", 
              "            ", 
              RowBox[{"ImageSize", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"200", ",", " ", "40"}], "}"}]}], ",", "\n", 
              "            ", 
              RowBox[{"Enabled", " ", "->", " ", 
               RowBox[{"Dynamic", "[", "fileSet", "]"}]}]}], "\n", 
             "          ", "]"}], ",", "\n", "\n", "          ", 
            RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", "          ", "\n",
             "          ", 
            RowBox[{"(*", " ", 
             RowBox[{"Result", " ", "Display", " ", "Panel"}], " ", "*)"}], 
            "\n", "          ", 
            RowBox[{"Dynamic", "[", "\n", "            ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringTrim", "[", "result", "]"}], " ", "!=", 
                " ", "\"\<\>\""}], ",", "\n", "              ", 
               RowBox[{"Panel", "[", "\n", "                ", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"result", ",", " ", "14"}], "]"}], ",", "\n", 
                 "                ", 
                 RowBox[{"ImageSize", " ", "->", " ", 
                  RowBox[{"{", 
                   RowBox[{"500", ",", " ", "Automatic"}], "}"}]}]}], "\n", 
                "              ", "]"}], ",", "\n", 
               "              ", "\"\<\>\""}], "]"}], "\n", "          ", 
             "]"}]}], "\n", "        ", "}"}], ",", "\n", "        ", 
          RowBox[{"Spacing", " ", "->", " ", "1.5"}], ",", "\n", "        ", 
          RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "\n", "      ", 
         "]"}], ",", "\n", "      ", 
        RowBox[{"Background", " ", "->", " ", "White"}]}], "\n", "    ", 
       "]"}], ",", "\n", "    ", 
      RowBox[{"WindowTitle", " ", "->", " ", "\"\<Organ Detection Tool\>\""}],
       ",", "\n", "    ", 
      RowBox[{"WindowSize", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"600", ",", " ", "Automatic"}], "}"}]}]}], "\n", "  ", 
     "]"}]}]}], "\n", "]"}]], "Code",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.953007083433497*^9, {3.953346987018937*^9, 3.9533470227652607`*^9}, 
   3.9533472666770353`*^9, {3.953347349800501*^9, 3.953347442440909*^9}, {
   3.953347489446157*^9, 3.953347491084337*^9}, {3.953347602533642*^9, 
   3.95334760289194*^9}, {3.953347685583802*^9, 3.953347686313628*^9}, {
   3.953347796127501*^9, 3.953347796934599*^9}, 3.95334784904185*^9, {
   3.9533480688506613`*^9, 3.9533480695970297`*^9}, 3.953348171582431*^9, {
   3.953348275626021*^9, 3.953348332065818*^9}, {3.9533484002275553`*^9, 
   3.9533484010106497`*^9}, 3.953348531701033*^9, {3.953348662124753*^9, 
   3.953348663168285*^9}, 3.9533490165919123`*^9, {3.953349218342217*^9, 
   3.9533492191611032`*^9}, {3.953349404958879*^9, 3.9533494054058027`*^9}, {
   3.953349509631791*^9, 3.953349510326066*^9}, {3.953349591806386*^9, 
   3.953349593574562*^9}, {3.953349648818902*^9, 3.953349659265308*^9}, {
   3.953350653633376*^9, 3.953350653963974*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4722122a-b9ba-4ce0-aaea-0eca9acc54d8"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`file$$ = "", $CellContext`result$$ = 
  "", $CellContext`fileSet$$ = False, $CellContext`errorMsg$$ = 
  "", $CellContext`imgPreview$$ = None, $CellContext`updateFileState$$}, 
  TemplateBox[<|
   "obj" -> NotebookObject[
     "1f6a6b19-8eaa-6441-abf2-0935a94af5d8", 
      "75142d27-72a4-ef47-887a-8af2d18d7474"], "label" -> 
    "\"Organ Detection Tool\""|>,
   "NotebookObjectUUIDsUnsaved"],
  DynamicModuleValues:>{{
    DownValues[$CellContext`updateFileState$$] = {HoldPattern[
         $CellContext`updateFileState$$[
          Pattern[$CellContext`newFile$, 
           Blank[
           String]]]] :> ($CellContext`file$$ = $CellContext`newFile$; \
$CellContext`errorMsg$$ = ""; $CellContext`imgPreview$$ = 
         None; $CellContext`fileSet$$ = False; 
        If[StringTrim[$CellContext`file$$] == "", 
          Return[]]; If[
          FileExistsQ[$CellContext`file$$], 
          Module[{$CellContext`ext$ = ToLowerCase[
              
              FileExtension[$CellContext`file$$]], \
$CellContext`importedContent$}, If[
             StringMatchQ[$CellContext`ext$, 
              Alternatives["png", "jpg", "jpeg"]], 
             Check[$CellContext`importedContent$ = 
                Import[$CellContext`file$$]; If[
                 
                 ImageQ[$CellContext`importedContent$], \
$CellContext`imgPreview$$ = $CellContext`importedContent$; \
$CellContext`fileSet$$ = True; 
                 Null, $CellContext`errorMsg$$ = 
                  "\:274c File non \[EGrave] un'immagine PNG/JPG valida."; 
                 Null], $CellContext`errorMsg$$ = 
                "\:274c Errore durante l'importazione dell'immagine."; \
$CellContext`imgPreview$$ = None; Null]; 
             Null, $CellContext`errorMsg$$ = 
              "\:274c Tipo file non supportato (solo .png, .jpg, .jpeg)."; \
$CellContext`imgPreview$$ = None; Null]; Null], $CellContext`errorMsg$$ = 
           "\:274c File non trovato."; $CellContext`imgPreview$$ = None; 
          Null]; If[$CellContext`errorMsg$$ =!= "", $CellContext`fileSet$$ = 
          False]; Null)}}}]], "Output",
 CellChangeTimes->{
  3.953354138576275*^9, 3.9536034191884937`*^9, 3.9536039374013767`*^9, 
   3.953617763121771*^9, {3.9536183503193855`*^9, 3.9536183697888985`*^9}, {
   3.9536184125513744`*^9, 3.95361843883041*^9}, 3.953618635822172*^9, 
   3.9536196375273533`*^9, 3.9536201259356136`*^9, {3.953621389411291*^9, 
   3.95362140563739*^9}, 3.9539857743261557`*^9, 3.954562777713545*^9, {
   3.954568182278467*^9, 3.9545682027531586`*^9}, 3.954670052719146*^9, 
   3.954903957904297*^9, 3.954915244025152*^9, 3.95499744151527*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f67e5512-c54a-6340-bb6c-03c49d73958c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<OrganDetection.m\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ObjectDetection`FineTune", "[", "]"}], "]"}], ",", 
      RowBox[{"BaseStyle", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<GenericButton\>\"", ",", "12", ",", "Bold"}], "}"}]}]}], 
     "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"predictedImage", " ", "=", " ", 
     RowBox[{"Inference", "[", "\"\<uno96.jpg\>\"", "]"}]}], ";"}], 
   RowBox[{"(*", "?", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "predictedImage", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9533543590677166`*^9, 3.953354409860489*^9}, {
   3.953603643969675*^9, 3.953603644419939*^9}, {3.953603702832714*^9, 
   3.95360388536203*^9}, {3.9536182992528553`*^9, 3.9536183046858826`*^9}, {
   3.9536184287872543`*^9, 3.953618434017023*^9}, {3.953618603413994*^9, 
   3.9536186590348797`*^9}, 3.9536189924103928`*^9, {3.953620299438652*^9, 
   3.953620306514595*^9}, {3.9536203725685863`*^9, 3.9536204004775143`*^9}, {
   3.9536213455724907`*^9, 3.953621350229328*^9}, {3.953985790016202*^9, 
   3.953985802156034*^9}, {3.9539858353888903`*^9, 3.953985839591661*^9}, {
   3.9545628421352425`*^9, 3.9545628533780365`*^9}, {3.954677351724141*^9, 
   3.9546773530648403`*^9}, {3.954677478552121*^9, 3.954677480290784*^9}, 
   3.954997567147743*^9, {3.954997871918604*^9, 3.9549978723223515`*^9}, {
   3.9549983227128487`*^9, 3.954998365319725*^9}, {3.9549987190604744`*^9, 
   3.954998730759037*^9}, {3.9549988476465034`*^9, 3.954998852657652*^9}, {
   3.9549990519159317`*^9, 3.9549990575561733`*^9}, {3.954999101972725*^9, 
   3.9549991036536617`*^9}, {3.95499935172814*^9, 3.954999354185671*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"293914fd-3896-654c-9a8b-51fcb730c0fd"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Tentativo di esecuzione script: \"\>", 
   "\[InvisibleSpace]", "\<\"inference.py\"\>"}],
  SequenceForm["Tentativo di esecuzione script: ", "inference.py"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9549998101791496`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"89ab4286-f699-aa4a-9e7a-91f84a8985cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Processando immagine: \"\>", 
   "\[InvisibleSpace]", "\<\"uno96.jpg\"\>"}],
  SequenceForm["Processando immagine: ", "uno96.jpg"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9549998102021465`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"f03f0317-ef50-6a41-966f-ed26aa262167"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Usando l'eseguibile Python: \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\giuse\\\\miniconda3\\\\envs\\\\yolo_inference\\\\python.\
exe\"\>"}],
  SequenceForm[
  "Usando l'eseguibile Python: ", 
   "C:\\Users\\giuse\\miniconda3\\envs\\yolo_inference\\python.exe"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9549998102161484`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"a3502339-d3b6-6740-9609-cbe86f524346"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Percorso immagine salvata rilevato: \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\giuse\\\\Desktop\\\\cartella_informatica\\\\magistrale\\\\\
matematica_computazionale\\\\OrganDetect-AI-Based-Organ-Detection\\\\\
uno96predicted.jpg\"\>"}],
  SequenceForm[
  "Percorso immagine salvata rilevato: ", 
   "C:\\Users\\giuse\\Desktop\\cartella_informatica\\magistrale\\matematica_\
computazionale\\OrganDetect-AI-Based-Organ-Detection\\uno96predicted.jpg"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9549998219324226`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"24640022-49b1-034d-b305-051cc4fa7cc1"],

Cell[BoxData["\<\"Caricamento immagine salvata...\"\>"], "Print",
 CellChangeTimes->{3.9549998219364223`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"97b57ed0-66b3-274d-b59e-213d6b648505"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
XM5vWucWtQceuO4zvPhdePLn5YhcQkznd+dsieOnCf/Z+PEo1Oy3U9qM8l8o
hslLdVMAFMAHAIKLiwvaVltbWxsbG2BF/fr1gQ9oZz09PQERgiCASwQHBwMW
QB5gAkBD0foPGjRo4MCB0GtEhg4dOm7cuBkzZrz55pvjx48fJgopPpEEg+JD
sYEVXUUhMAFooIRRo0ZRfsSRH3mAD0AJZOvXr1/fvn0RoihEACxIxFXIhgfA
k3Tp1Ll7ty6dO7WrrCqvgIlT3aG8pltpdY/iqh6FrboXlnUvLulWVtyxtKRj
aatueSUd80s7lbTuXljeJSOvLY6Css5IQToOJCKektU6ODJTpY9uqQpt5hnQ
uIVv05b+zb0Cm3j4OTdQyuybSSxcTaT1cEjMXRA3taqPUCKxk5jZ88PUQWLq
xA8zZ4mZI0/BKZ6IPM4SiYtE4mQiceKJEgd+mDjyg+KGP186DGf54fR7h3gh
L9NOYkLPIB6UQok4arM5/P5Bp/Cj8OSUwiMv3cjZEJpIxJ8mEa8ywW+0kVji
1tYijJiLnTSSWvPE6ITkv1t+d2oiCYAClDs0NDQ8PDwyMpLmQvj6+tKIZ1BQ
ENgCKASoAkgClBRoMHHixPnz53/55ZdLly79/vvvV6xY8bkolAL54osvPv30
008++eTjjz9GzvdEAYCMHj165MiRwBAAAiBl7NixQ4YMId2HQNkHDx4Mraee
DTJeIEASMA2gB0JcjgfAJciMsHdvYEb/IYMGjxkzavSYYcNGjR06+p3uA96v
7PJRSecvCjt+lt/+86Kar4qrvyqu+qig4v2UwrnRWTPDU6aEpU4JTZoUmDA+
LHlybM6sxLzZCKPSp4enTY1InWoII9OmhaZMRs6I9GmxWW9GZc4ITpigjxqj
DByiChmmCBjcXNenqbpnI1V3N4+ONo0qJTbZElsceRL7fBwmDgWmjvmmjoXy
BpUWjmWmdqUSWb7EMsPEOk1iGS6Rx0nk6RJ5tsQ6m4dWmRKrDIllOg+lGTxE
iizzRbo0XWKZKZFmSiyzJdLsOiEyoJAsfpVlqkSaJpEhTJaYJ0gsUiRWaRJr
lJNeG0dpKIfKfzW0SKvNaYnM6TyO+1LJuIsFykeerNr7Im6VJDGPk5in8OeX
p/I/LZESLTH3lUgaSUxlZgbbwsgh/lJiQAzY3TSb0d3dHeAQHR0N2wFAAWQI
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
QUFBKBPogavAOpo0acLv1cJTq9SFB4RnpWT07Nx18tjXp0z+svOAw411X8UX
nho+mZ28zDbvZ2PeepbVidnrb5srbtnpjg+YxVYeYN7hi4XY5UOmsTfeYaPf
Zi2j9jv4nEEja+b1S5Ooe75FzEJzQyLcNwHNUD7j3RGq27Z+p3yLWcNoWAp3
3HTnooqYq99pZ59dXcex8QtZ6QDmHv2rrfqx1PuBhfqCo9/eLiPZtA/Y1AUs
pfUFJ90ZwAvv/fC+yymH+lf/XOYRc9Nae+85K7hrrTzXIOBgt5Fs6jw26T2W
XfVTWuniw1dZVNkTS8VlK819E9UDU+GpRKA+DdHeqe0R5daNvXBy4BS25WfW
MuKUTMkhEWBiAiKkPucetXHdSdZjMpOrD1qrbluRraTk5gaoDjhMw6Cr361n
Qyc/kqsPmwtPYR9JvMGpntiqfq4ccAZMJrToIXBAorwv1Z3sO+HRjhOsZdhB
8A03v13NwmDCHAU4WOl/kSh/tdQyueaWq3aLxKyjRNKcz+wEfxCXydQuezGi
xF9K/miFNcXNzMxojMPNzQ2WBbQSOEAruKGq1PTTPG3oPlJwltxN0IQrhMAH
aDda/LCwMH9/f6AHztKMLMRxIbJRCuEDQpRA4EPGCzKAlpAtAyQxGDX8P0+F
ylOt9daG+gdnp6ZXV1T26j29dbftDXVflnW/8/UGdukOO3aFbTzM+k1Fo3lZ
rn0IFRj6Nlu9j2VVbQSvXrWXrdnDvt/K1hxlURV35NproPTuMdfeX8uiK5lc
d95C+4B36AkwNy5Gt/31vbWscdRjG9WVgJRLHy9nwTlnPt/CYPt/uYVNWcT8
cpiV1xVb7XXXwGMfrmM7TrOlG9iS9Wz7WdYb6ikc433+uodmiseOfndmfs7K
+zEL9SULzTMLxT258rKb36FP1rHtp9g3m9jSjezgeTb/8wcHzrGokntQOqlw
31TFtd5UXWtZED6YCk/MBN6baqM6Ou8btngjc9IeNve+a67lfQ6AFJnPVceA
zR9uYjO+Yvaa7Q7CTSvPx6AQZt4M6owyYb+4+JxfspbN/BAZjkg1T3iXpgqa
zhzVRzsMPn30BsvozPDw5rpH1vpj73/Lvt/E1FGbqgawD1ayRevZ6PeYV8J1
S9Upmc+vwECZ+prYXdldIvHgA520gO7f5D7UKP8qeXXuJYmFhQVMDDAHNNwE
DrRSmwgDUQhoMZp7IAC1+8ANw9AGzhIHAEqQ71wwB5xCOTS0CusjSBTqxkQh
QA/DsAiZHgb6QSiEW4NI0GPg/i09vT3xFEoglT40uk1o5hfO+uUOPvu9Yvfv
OM6mzLvfInyXvfaypfK+XLjrqDky5m124CS7+CvrNZ41CDrUJORo0+CtC1ex
RZtgkp+yUlyD6THzS95R30y/wcb7kkzxBCTfLfDsj3vZ/O+ZneZnG/WJ6PxD
x6+zn06yed8x96hjbkGXXP1vy4XLtvpzzWJOrzzMZi9hnjGnGgScdvU7G1Hy
aO1RNvUz5uhzXKq+LdU8cwm8uWIvG/UOkwonYdTYKq+pYq//eIDNXcaaRB92
DTvhHHg8ovjsvlP8OaNL+Citied9K4GbGGZ8cOSJpeqRhfoJ+ANBhIXyvmvA
qaXb2LA3n4L/W+vE8RTYL17MRrgt1+3sO4t9tpE1DvgJv0iueGYl8hAQGKCE
mdcTmDbj3mNrDjH3sKPAUkv1M6CQtfKeo3L75z+yy484RIAaWenuOQUcWbqV
TZhzbMUO9tMpNvlD1m0cg93x0zkWnHfGTrMPxpet7pajaqO58wC5o5+dg62N
nYwvoDO1tJBYmpta/FM8Hhvl3y+vfimaoQ1bAyyCFna5u7vTGiiIQYWp6wDa
HRsbm5KSghA4oBBFI4qhO8JHFMTpLBEPYiZIBM1ITEwsLi6OiYnBWRpOBZLQ
KAly4tb4kwZTCKO4meOtdPf0auHlqdZpfQICFT65TQNmOOjXWunO1Qs9tW4f
mzCb2agOWwl8xEGmuu0oHHhrEbv8Kyup2eyo2WktXJcqr9trD+V0OLr2MPPJ
uG8n3LBRn0fD/fMVll951EV1ylZ5T666GFZ85/A1ll51ENzbTn0ipXzvmV/Z
t1tYA59lNsJZGPhSNe8xcNQf/Ggdm/cDc9b+aK+7YKl6YKl4aKs+65uyff0R
VjOK2WrOwaaoH3Rl/UE2bi6z0Z+yUP/iqjvxyUp+lb12ubXfeYnmjrn+ro1m
d1brVadvsC5jYCDcslI9NVc8H9EQIUIch+VdE6AKaPrrBZ1ZCdjB79Wf4MMi
fIyGyZVM5gXz6mD/t9h3u1nzkD12wjULr6c0c8MS13o/kmuZlfJSy7g960+x
SR+z5uEnAIO2wsmmwWcLOvxy8RY7eZXFld+RqS5bKG83Cj667Rg7f5vN+Zx5
Rax1Era6aHY1D9mc3/n6/kusrBeTq84jZz3d5kbqSfqAgoAgf19/H4XCq2mD
Jm6O9RzsHNHigJqiXtXdT8Eof0Ux9EVAVamvABrqLvqXa9CgARJpLAMgAGsC
EAEmgJCWf4IwADeAIYQS4AaRoiBC/ZA4S2tADCMa+BOMIj09HUCBDEhHCoEJ
IQOEuAdKwI0iIiKiomKCAsN8fPzUaqVao9D76rQBuc18pzlo10l1l11DLm7a
z8a/hXb/pInyqZSPKVxvGHj4naVsyxHmEbTCVrjAhyQUj+w0p6ILd286xuIq
wLRvShW36wWeXLOPLfiWOeqOocI7qrfN+YZ9s4fVC9gqF67bC2dyag6eu8NG
vs2cdXt4sytqq7X6ijJ23+qDrPVQZqc/bKm+bik8liofwTCpp9/+0Uo2+xtm
J+xwEn5p4nt24142/h3OSayUF1SxB9ceYNVD0eIfMoPJr+FjIjaaE3GFOw5e
ZBGlz6xU16XeDwzjmwQU1N9oJhoFMDrcAs5/u4mNevOZte6gRH0PGWRKZoU8
njed9fv7TmOLNrD6AXusdbclSg4snGPAxlE/4UO3iodWmpuuQSeX7GRbT7Np
n7ABk59uP84OnmEde6zdvp8lFD+19b4h977rHnz8zFV2/ALzjN4l05y3Fvgk
NGvNVTvtnjc/4QZIs9Cr9prz9TSrkwq/LasYWVhYnJyeEZuYEB8bl5qYFBsd
A5YIkCcXhXylq9gGGfyakr8gir+69wqtxn0p0SAv5Tepsw8LURfD6t2/jU5G
4PqTQlMj8DVBAGAmkNtbtPgEEaTgYBFQWKQjJF+XtNaDUsi1PmWged3krgo2
BVJoXIMGPsAQUBR1bOIqwAJNrqBREjIuYFnQlh+AJmRDOcAiQaVReCndm4Fp
NON388/xCJzprF0Pw9nF/yLUcNIcEObjFhpx8oNwy0G7c8gsBpOhWchOC+V1
Uz6dgNmqz8cWHdx9niujVHkNlMNGON2m/5UDV5g65aJcvTM0a+eBq6yoP7P3
O2uhuGerPFfU6dShKyyl7QMbGOCquzItJ+1yzcWEsnPrD7HQ4nugMebqO3xI
VPnYRrjlpN7deyL7fAtrFrHPVnGxedDFDXs4RMjVh2205+NKToFURBc/slFf
4pMixDkV1sLZhNIjey+w0NKnNtqbMHbEaRgvIIImTRFEwAaRK44v/IZ9vZ45
+x+Tah+Ye/MBTQtvZq267aLd+ul69tZSZq/fZ6G5baLhc7rEPtjHeDxzzyfW
AkcMM+W1hqHbWw+89eEKtmQTm/I+C0r8YtCYn/f8zDzDLtqp7lsrHnmEnjl2
li3fwGyF/Xy+h5IP0Uq8n9rqLhR0OLHpEPPNfGDt/XM9YWVU2hdFpUNLilvl
FheXVrTq0rnj0CGDevfsVVVVlZOTk5qaSuNTaBdQZ6hRINCgHZ0ABQZdrmub
EIAYdLzuUncDJvxuZZbUmfPzt9eUGSHiz4jhlYJFQH+h/sQKEIcJ0LBhQ+qx
pJ5JGrgko4Ny0jiFobsS1YC7evHzo94GpSiUiOqBCK06Jz+WTUQBJniIgni9
evXQ6Li4uBjmYyAduIGIl1dL4EPLFt4qb623l7q5V2J9YayLdrWt+nqToBtr
RTV0FH6GIpigudTctNftHvo2W3GAuUf8JBWumYlzEmwUZxNLjuy5yMJbMSvd
LRPlI6nyikf4Tz+dYSPmsAa+X01698mWn1nj8JOWwq8WCmanvhxbenDfFRZe
/MhWc5uPPApM4vXAWnshuvjEygMsstU9a90Zc/VdU3H2ppXqhqtm1+DpDHra
JPwA7usaeH7DITYW8KU/BjCJyDu6/gCLKniAki3Vz0xEhYX9Elm0c+9lFln+
xFK4bKa6w/sN+HTup4Z5EWAvZuIYqJknc9GeHzLxMayAFhEXZMoHfKKXwGSA
GvUV74idG46xrhOZlfYYngr5kS7xeEjzMQwTO2GtWGlvy4QLrv4XmwRftVUc
g70w61P24x7mFnjaQv1IKvBBnO82sM+WMSf9CZoxIhOnYMmEU2H5W4C9sW0Y
LKx66nVRyYuLy4aVlZVl5mWlZafn5eSWl7YqLy0jf0H5+fkwKnG2XJRevXoh
hI1J7pRRPfChySs74IK2kiSXJgYnJ4aK+hIlqDtiYtiggTDhpW4Qw/LnVze0
/fdp2l9WyKeKiehthrxkkxNaQwjTg7oXoPjQ8QBRECGLg7ouEac5EhTSolEk
Uo8E0AMIQ8pOLILYAtkUBBFEHoBIVFUQwpIFXIDbiI/UuEFDV5Ca5k09mjdp
Wc+tUf2mkdZN+zprV9oorjYOvP7DNjZo4gMX7RGZ8MBUeGKp/QVt38h32A97
WNOwzVLNJVNxvrSd6nxswYGd51hYBdrW61LNM5lw31E4Nmwm23aaBaQs2n2C
jZ8LG+RncZ42LPcLESUHd1xk0eWI/2Ii9vuBMMiES83Dd64+ykbOZbaqHXL1
TQvlQysBbfR596Ctq/ayce8zmWqPuXDDLfzyyv3stXc5RJiqznhG7AFEjAOa
KffJFL/gLnLtEzvhcGLZpt0XABEPZLprpur7psJTHECJ2uUSsG54jyVHDCsl
s1dfLO9xffMxpk85Z604JdPcNVPeM1P8YqM+FpS+Y+0hlt2byXSXpOqHfK61
8jrMHyvFdWvVfUCEOOf8V6lwAxiIS+TqB3LFL7bKGw0CDn28mk3/ksl8Tplp
nkoUT6xVpwdMYDuOM8/I01LFRblw19TzFmiSo3b/mPfYup9ZveCLMvW5esLG
1MIV1e3Hd+zYsaKyrLA4Lzc3PyeLuwjDvxxRgBWED8CKtm3btm7duqCgAOwi
QRTABaoKaCf4J9EM1BBUCVQG6s0AbtTdkeGljRVekpfME4PFYUh5CXb+xer1
/4PUNd+AEvgWNKhB+usuOs02rBPHBwVpjIqKIlOCPihQghDDTxTkRB6E5DIX
TIPmU9E4BRAD+ADkgXFBKESg1FgU3JecY0MMdKK+KA0a1W/R0t3DvUXzps3w
dI71/S0b9nTVr5apLjrqz87/li1azRy1e+Wa25KWd6H49qojw99iK/axJqGb
LDTnJOoHaLXthHOJpQf2XGBhrZ5YqK6AdUMBrRQ3dWnXDl1l7335+OQ1FpSy
z1Z5hmYzwgaPan1w2xU+qQk03lycjYkmFXGZ6sjYD9ia/Uwbs85Nc8xBc12u
OOcg7Mxtf2LvRZZQydt0S80915Dzaw6x0XOYXHdMpr1l433wjffY5kNMF73B
TX3cQXHNRnHaRbu+S//dF+7wGReWwkWp+jEAjY9fqJ9Qp4SFOGWUplFZeMHQ
uNXYf+/S7ez95cxJt0ymOmQtXLDTnHLRbP54GVu2k9ULPGmhvGmluGsvXEmq
eJRVcz+hClzlpKXyvlR1T5lwe+YSpky/4OB3CC/EXnnCVbO9uNfjny6z0LIL
Ut1FifIhaIy1+lpyqxs7TrCc9jecdFusNadl6jMuwk5tzPZV+9kbC3iBNtpL
zpp1eW03duo2rWvXrh071dS0q+rQAf+1r65uR2hA7svIJyEYBXCDvBxnZmam
p6cDQOr+SZ6QIaAf2dnZiYmJqEvJoqC+oSKhQgI6UCto51naybru/rMGq6Tu
dgxESF6iEEb5k1IXVw1cAqoKFW4hCs2XNkybpM4KWvVJnxtNAxoItBSIo1YM
HTp0ypQpM2bMoOVaAwYMGDx4sLgU6/XRo0ePGDGiuroa+WtqaiorK0tKSlAI
6gbNqEQ1IHMGyIO7xMXFxcfH8/ToqPiUhNj4mOjwiNBAmDP+Cl26d9gcZ+16
uXDZRn0+puzsxp9Zu5FMmfygSaQ4JVJzdvBMtnwvIGK/lf6KRHgIg9pWuBhT
dHoXrP4yZqm+DhyAeS5VPbPVHFz4PTv/C5u/lDkptjppb1sqHovzpS/4FRz7
6SoMDZjk9yw0HCIsvZ+B3gOLbDWHh0xlu06zqj4sKPOX4NzbsFb2XGZRhadw
d0vlXUvVA+fASysOspGzmVx9Sircl2tu2Kn2wRLBVRXdWET2Hb+MK2PmstPX
2ZGLeKoHUu1Nc8UjcXblC4igAVBarQmUsFI/tNWc844/tfEER4n0Tswn40ZG
O/b+D2zrSSYk7pR5n5QJj2TKex5RD+Z/x77fyXsn3GOuybQP5Lr7cu89Mxez
ZQdZxWAWnH0jPO/m+Pls2xlWNpBZ826HG1Ifbv5I1b86qPdHFVyEXfb21yyu
moUU3Z26gG09xpecOOo2gmLJVRedABE1m3v0e5s7FOrdrUtX7nCsU6cu3bt3
B2h06tSpc+fOXUQBzSCPZLTYX3QmxmEE0EFMI/e5ABxQl5CSlcXpCBCG/JKh
2pSIgktoTI26vFA53dzcaKsFIAZ1jVqLQjvQGTafNfhUpzWMf2PfFqMYhN4V
dSDT7Cm05tRPiBafBjhoow2aJk0uJfG5Bw4cOG7cuKlTpwIK3nnnnffee4/W
en/33Xdr1qzZtGnTtm3bdu7cichGUVasWLF06dLFixcvWrTos88+Q84vRPn4
448XLly4YMECFDJt2rS+ovTr1w9Q88Ybb8yaNQvFfvjxRws+WTh/4Qcfv//h
/FnvzZo5+/Wp37bqc8JBu0MOe0Fx00H/c+fxDMx/8TZe82Wqq1bKS6kdWc+J
zFl/AdaHucAkfJXWHc+IS2+8z1omQAtuW2mfEoG30Rwt737g1G1W1pvZqs8C
YaTqp6bej6yEW57x18YuYN7xzMLzDkDGQisu4VTwzgFr9S9y1fGOo/isiQ2H
2arD7IeDLKjogY1wFmTeUvEQ1oej353eU1hGB2blfdtayySqBxaaG9bao0Cz
PefYpiN8Ktfygyyz+urED5lnEuPdGp4PpXUAgVMIFa3XEE0PHWDqoZnqtp3+
YkzJ48UbOFNauZetP8Q+Ws0iWj2T63H324ARM8Wv3qmszQi2ZBdrN5opU56Z
K381V9230txsFnVt0kds0zG+fnPdfj5Rs/NYZqvlPTDmwjPew6lmpoqH1tpf
ZMrjwfl3l2xj64+yVfvYxqOsZiiz1p6AqQIIslVfBcEIy/muov3rPXr17NKt
K6CgZ9dufXr07N2TLxnu2bMneSoDgCCOFPJkCPRA2zFs2DCc7dGjBxCDPBMS
niADOTNENkISnCKIAHSQH3UIWhYCEIAG/kwUBfYLGjLDGD0qMOgouS1F9a67
C63EaGj8PULjnjD9XF1dAREgD+AMNCUSWAEjkTxF4PtOnjwZmjtmzJhRo0aB
HuA7UltQUVEBeoBPSV5qkUiuLF977TXkJwdTaF+Qs7foQAoggFNvvvnmu+++
+8knn3zzzTcAEODGt99+i8jXX3+9RJQvv/wSiR98uHDhoo8+/WzR1599vWTR
1x8vXDxt9rbYsiNy3Ulx4fMD6LJc+Nk340xK2wcNAi/DZLZU3bISfnHQ/Cr3
voOG2FwhrsdUPrITbtiqroBvSzXPRD8S96Xq2zaa/V+sZ0s2snq+x2SKX6yE
ZzTb2VJ9D4Y88ssUd61UT01Vj3miqnY5udgHeF/m/XNg+omCLjdSay41i9xv
pb7IJzspH4OiiKtB74Ht2/AS+GwHCVRP98xC+NVGcyIg/Wheh4vpHa43Dd9p
r97voLlsofgVkCUTOFExjGjU2heqWoiQKJ+Z6RjvklXedlCer687FJJ1Kq/z
r/4ZxxoE7JdqLpkp7/G+C+Cb9rGF+pKDz34Xvx2O2t0O2qNy9Rk8nkx3TS4c
qadd4Ru/Jrv1/vRWe1qG/OCqW2ej/tlauClV35RpbvOlIqqrlmBoutP2wu4G
vusicremVx30itjsIGyXay5Ildfs1FcdVIfcNN/XF8aq/HIDggJ1PvqQ4MDE
6Nj8zOwUvtt8MiwIVAN87l69euHro7aQM2RgBcABrBJ1YPz48SCZEydOBPOc
M2fOzJkzR44cSW4JyfEp4QP5SUa9IpfI3HOp6EEdIawSwAVt8wTQMGwFhThB
B56ERt9gNTdr1gztIJke/2m1+2sI2WvgEjDuyMSgac/gDHjnwGegNL4RMB8f
bshzQYsA+yI6Opq6KajTKTQ01N/fn3okqA8TPJB6pWAvICRXV4jj22WJgk8M
0EBpKBOWCFjEhx9++PnnnwMoVq9evX79+h9//BGsY64o8+fP/3ThJ++/9+Gs
Nz+s7r7YRr1eqoWC8wkP0EQAgpXqOj+Uv+BPCwX3rCJVPuLDEEpmzl3NMHHo
87FU/RDaZ+b1DGprL9yxVRyJKLoG66O4+007xWlbFccTUzUz1yIEE7gv49Oe
HxH/p/kVtc4iFBxkZKq7aExh7NioL8jU18gtTK1/CXHuE1/VpXogfb7UwlL9
TFzcfcdGfclOuCDXXJQLV0FI0CjzlaHiVbxk8ai95LkTG+7QRnQUwyO85Hsy
5S3gDwrhSyc0Ny1Udzg+eImrWVX3pZoLdsKOej7rnDWrXDVrG+jWuwjr7HRb
HPTrXXXfN9Qtbqz/opH+iwb6r+rpvnfRrnbWbnTRbXHSbHLSbECcH5o1Lpof
6+u/c9V+7qL/ws3nGzf9jy6aja7C5obq9Y01S9y1s+RuxVYO3g4urs4udg3q
O7ds2kLhoWze1J1W9dJKHFQGcocIbUUFgGUB1SaVB3qgvSD3pGh6yEoFO0XL
AgxBSwRUASwAKwAswAo0RoALcqQMrEAVzRelQBQaPSHjBfeiraDQwAEoYLci
xGOgBURr+De3oTfKCyFf8fb29g0bNvTw8ABJA/Di8+HN4wsavE0iglYAXwqa
jg9NHi9BMGj3T3wIaD2hAW3qB1SnNZs0w6ougNDSLSTiFHWB0n5eaAvwcVFn
QDNgwsBygVUCswWkAqABY0Q0ST56++354yfMq+zyja12D+/kVz4EJkDdQO/R
usFItxVO2AnHHbQnHITD3Hecdj9f9aw+hMNOc1Cu2m2n3WOr3Ovmc9RFvaue
ep1vwsZtJ9n8b1kT33eb+Gxx9N7nqDliIxyw0ey20+110B1yEA44CntEn28H
uGs77V479S7u4e25czlyYWdweUfpBkdwDuq9oiO7/chjr9qDFGftAYMDOqQY
3N/VdR9ncIKHs3bK3SiBSqb8KMFwFtciXS7ssdPt52xBOOygvgHuZK15IBNO
pNXcaNXzdOu+x9r2PdKl3+HO/Y91HH6u06gLXUee6T7ybK9R53qMOtdz5FmE
FG/X73Cr7nsK223JbrMhv3pTfrsteW03plesSShZ7pvyaTO/6S7erzm5v+bY
dIxd/UFyp07mNhkmVr62zh71GjV0q+dYz82xSf3GzZt6NG3MZ8HBSqUxL0RQ
wWi7xvr169PAFi36QwYACG0Dh8qDVgP2BbBi0qRJ5MAQoIH60KdPH3K63kMU
ckeGxoV7GOK9H53I/SlaHLBZ2vsJiEGbxKGm0Y6ToBm4HXgy9UIYicSfEZhm
Dg4OoA0gA3iHgF/ANSAd9iOoID4BsJp809GcSVphgTjeOXfjIHZJVVZW4tPg
C8L0mD17NqyDL774AjqOtgBfeezYsSiQ9g5GTQCRIKCgykMLN2gFB07RZuUA
GXxifHo8BjdVJoyf+9477y14f84786fNmD/mtXcBEfa6XRbCXbn6povuTH2f
rS1CVwVkbowr3ZFQsi2haGN6q80xOV8FJUxVBPZvoe7RXNGjYcvODby6KAIG
CiFD9aEjtcFDs0rfHv/WzrO32fT3twmhVUJQjS54YFjCpMTcuckl83LbflLU
4ctOA9aX1CxJz58bkTBJH/Kaf/TE8IwZOCLSpkekzYxImRGaPC04fnJQwuSw
pGnhqTPCk6eHpUwPTZwaGD8pIGaCf+yEwNiJAXETg+Im6SJe8/Yb2lzbv7Gi
V32v7g29ejRS9mqhHYCwnkdXpDQX+nn5DxWCR2nCxvhEjPOLGe8fPR5XqQJH
ePoN8fQZ3NJ3sJfvEHXIKKQHJ06hO0alvRmT9XZ2xcdpJfOzyhdkt14RlXXK
UXHYWnEFMFLYcUubbgtad5xU3mZUVesxnTpMGjjknTETPhk/9asZs5fNfX/t
nPlr3pq7YtbcFe8uWLfgky1vv7ty5pzl46csHj72w2GjP3ht4ueTZyyd+ua3
02ctmzT96zcmf45j3MTPBw9f0K7TpMKSQRVthianlfsFRngrFc1bNGnarKGL
i5uNjR05IHJ3d6fJurShPPCBPAzgFM20x1maeG+YxAvoQGsCoCB/6eNFQRVC
1QImABlQJcgF4rBhw5CIPEhEs0IdpLgK9RANDe3aALhARUJ7l52djSYMxBXl
445gES/1SxjlbwhMM71eD3yg7beg+GjNwdOg0VBhmupA/i2hvGjrwfTw8qH1
AHbaTAdfAShBO2ohESbD9OnTYTWgIaCuyy1btiDy9ddfv/vuuzBYcDmICr4a
bkpmCO4FqEf5hBUAIjJJ8Bh4Hnz04SOHjR732rjXJ42fOPu11+fV9Fxmq/lJ
qvnFRnXOM/K0X/KWkMzvk1stz6n5saBmRVG7HwtrvuvUf+WoiasHjvyousOE
7PyeIRHF+sB0n8AUlT5a8I3V6KP6Dhy1csO29j36Bsck+4UnBEemJqWWZeXW
xCWWRMUXpedUt2rTd+Rrc4YMnz5yxNR+fceWlvXIzu2YVdgxMasyp7BjXnFn
HIhk5NakZrVJyazCQem5RZ2QmJhWEZ1QHBadFxyRHRqV6x+SrvFNEHziEeLQ
+Sf5BqXqA5IR4qkUmuimHoENmvo0axnkLUQ19wxGiDy4KiA0AyHyaP0S1fo4
XBIUnhURWxCTWBKfUo674EhKqYiOLYqKLQiN7qGN/MJZvRUGiIOwUxk0yjc4
MyA0Mjw8NDI0LDwwOCYiNDkprqSkCOqDJhj8kLoFgOdvv/02PhBsOkRmzZoF
kP/ss8/E7qDPvvx88bdLv1u1YuW6dWvWroUVuHLFytU41q7b9OXipe/MfW/m
rDdnvf3mlGmT+/bvh0a8SBSwAlQeWreLtlsul8OepVn9NN8ep4hR0LQZgzsj
RFDxaPtINE/k4RBAAWQARMAsBT6MFoW2aUA64oAOnEXNBFYAT/C7AB3kgpWm
eqLpoSl5NC3caGv8GbGwsMC7wiejOU5EEvBZ8fmA9oB9fDg09+QfGxyDtgyG
juO1w7gAl0gVBe+ftuYBztA4OBADEUAKMBzMhHzQgWO8+eabM2fORBytA747
sURUV2QDD4RtQrMvCDFodzAUW9GqrF11TfdO3fr1HTp8xPT2fX6wEX6y0nI3
rb5ZV5Mrj2ZWb8tutz2nZktu9Zb8dtuy2m5KLF2WUPhVbM6C7Ip5Hfp81LXf
u90HvFle3T8urTAgPD4kMjYuMS02LikoODQiMjowNCI0KiEmPiMxOT83txzG
VkFeZWFBK5hcVVWtuSfw0WNBb1u36VxcVp2WWZSWmZeTW1RQWFZcUlFS2rq0
rBJHWXlVXn5JYVE5/YlIdk5halp2UnJGfEJqMnhuVn5WdkFKahb+RGJGZl5i
UnpUdEJIaFRwCDQ4OjAoXC34uLfwbtioebPmngqlNig4Ahei2Ny84rT0nOiY
RDpiYpMSEtNQFA5eSFRKWFhCcFCUt5BbX5ji7LvNSncL5pKbR8/G7kHNPaCR
XkoFWu5m7s0bt/Tg01a9vJVanU9IaHhCYnJ6RlZmVg6O5JS0svKKrt169Ord
t2evPn37DRg0mLfbEydMnTnj7bnvzH/33XnAkHnvz/3si0++W/b1F4sXffbF
ok8/W/TxJ4s+//zLJUuWLF26ZPnyH1auXPnDDz98+umnwBkYiYjgo0Nt0bgj
hAqjoUFbAHAw+CyCAeLi4oKqSJMf8CdO0fx8wzJAnU6HikETKgBEtDcTKiSA
DnUJ4IAGi7Z9pP5wtFbADZzCnwRctIrZzs5OKpX+p5XvryG0hR+5mQIg0IxK
wLjBbwzgAnoKhgYVxmel9w9UN0yQA3rExMREiEKYbxjgBlyQSYhPQx1T+FgA
fLALAAVoxmRR8CdsT2AFn8SbmQnYASygKJqdFSwK9CEzNS0vK7u4oLxdh/7l
Hb+w0+6xVN911F8JLfo1q8PJnA47c9rtymizPbvtDhyprbcllm9NKtsek/9j
VPYnCQXzsypmt+o4u7Lj9MLWw9LzO2YXtU/NLE1NzY+Jik+MT4qKioGyBIdE
hEfEJMSnJManxEclpiWmFuZl5uWlFZfkt66qaNO2pqZdp86dunfu3FXcLKxN
RUV5EbAkL6eggG8DVlZWUliYjwOJiONs27ZVnTt37NWrByIdO7bv3btn3769
O3XqgMzZ2Xy6UGpqcnx8LH6lv7+vn5+Pr69eo1Hz2ebufIYYDpVKERsbnZ+f
i1sgv9jBg3ceEx0diTA5ORGHCKqwuGPjYmKDwssb+ky2990gUVy20x/10A1W
qiJVSp1S6a1SewkahSBwj2EqQa3WCIJGp9XrNFq9oNUg1PnodXpfvwD/4JCw
iKjImNj4xOSklNR0HCg/JSUtP6+4vKyysqptVVvYluWt25QMGNxnwKC+AwYN
7Nd/4KCBaM3HTJowcc7st94V5YMPPvjqq6+Wi0LdSsuWLUMcfBKm6IIFC+bP
n4/GApwT1QMVjDZ4RQUAayWHIaiBwAqYJ6iTiNjb28MuRrxJkyb4FeCcaNeQ
Ga0Jqh+1cWTGok6iNGrRaG9rVFeUTKYNUQhjX8SfEXpLAAryR4dPQC7paAm2
VqsFqSD3kuRDkhzjUzcycAOvHeYAvk5iIq+oyIl6j8zIQNuI06acZL8Q4KMF
gXmCr0b7CIM90m4aQAkYlbgENwJjQVH4yjSTE6G4aCw8OioiHtU2rTQm+007
3V5zNffg5J99O6XqZFrl9sRWGxPK16W33ZpVsz2rzdasNtuz2u7LbLs7tdWG
uILvo7MWRWctiEyZnZD1Vmr+9JScUbmFg9MyqjNSitMSM6IiokND+KQsKGlQ
UEhwYEhUaGR8VFxCdHxMTFxkVFx8clpeYVnryuqunbsMHTJo6pRJE8dPGDl8
RI9u3SsrWoNP5Gbn5GRllxQVI5KRlp6emoYwOzOrtLikuk3b4kLARmFFeauO
7Tt069IVKQV5+SABODLTM1KSkkODQwSV2tsT8OCJo0Vz96aNmzSs36BZk6Za
QRMRFh4bHRMVEYkwPjYOYWR4BBKRggitf4F24Cf4BOY30k9w8d9oIVy31x5s
3LKLRhUWGRLNr4qPwRv0DQzQ+Oj9AwMASuIKO7Xo3sddXMTH90oICOAeR9Vq
7ttcq+Wr+/V6bVR0aCTeSCS4XTwITFR0fEhYsH+gT0xseExshPjpU9Jh62fk
puH/5BTUAdQTahdogzZYB2gLQCOpacAXp7k0c+bMmTBhwsSJE5EyTRQgBigH
jJ133nkHEZRAlae4uBi/EXyI3I+Q50O9KLQkkAgJeTMgNgJuTFvew6KheYA0
jxcswggRf5fQBCrJ895LV1dXoDRIIL4IOa/OEwWmHDABPAEpQAacQgh7E4kx
ogAoaDYLWX+0KSf1MwM08IkBF4AOZEDcMDUXdBFYAbuDJmLBqETVAtQAHGgW
N5eAIBxobWNiE4PD0tWhw23BIoRfbdQ/61NOR+dtjStYFl+4Iq5wZUzRypCs
b6Oyf4gvWJ1QtDGxeIt4bEouWZ9UsCohd3lKwfdJuZ+n5i3ILn6rW5+POnSa
VtVmWHpaWWhIJFpYvQ+UQh/oH8SnceKWQSHxCSlJqTk4UtJz4hNg9aS2q6l6
fdxYbrzPegt1eMIb48HFe/fkWx63KuPTe4AMvC89No4vY/Hla1uCRYc6wAHA
aXRkFH+rKanICXDg8FtWjvcWExWN2t6yhQdvMd3qic4BufvxRg0aonqrFHy5
HJp83i8UzBdOgnRw7dBoxcV03n7+Ojyx3i+3gTDeQbtGKtyw0+xr7NlJUIZG
hsUmJybFxSdGxEDVATQgCOB+UeL+rRyHQ0KCxF7ocJGyBYoL8CNEQ4Av0tfp
1T6+qoBAbThsIUBEdGJkRFxISBjAxD9Aj2tRAvBJp/HVqLV4Hl899ztE/c84
RYNWaaJQU472hWxSxMm6RDWAIUD7PgMTZsyYQR7RaZYd7aEwb948wAjMB2pW
UGdoO0jwT9Qx2pIeNyosLERpaMtQMm5Hw514DLwlgAOoCKwYJycnY0cEyf/o
PLDunHaakgoiQWvA8UpRhVCBaZoKzYxFSNPpARfZooBLZIpCk1Xw3ZEZuo9P
BnzAR0ekjSjUpcn38hb7K8D9cDlNvaAWB2YI9XPOmjULqtenTx9UHt5I+Ppo
fHx1fv7gElFRSb4Bye7aPg6aXdbCdSftrrDsXRnl0PqFSdnfJuasTMj/MTr3
h4jsZWEZy6KzV0dnr43NXR9XsDGuGMf6hKL1qWUbcyo3F1RtLGizrqjNj4Xt
vint8PGYiUsr2vbzCwpWqLw9Wig0gugZI8TfP8TPLygwJDwuIgJNZ2x0bFRE
VGhUTHhyahLMd9TGyjZV3bt3HzZiOCrtW7PfHjlyZL8B/VFj8wsLoBrgI3zl
rJp70wKZ54oTEgw6FJfA91AuLOYvqqJS5FedeA884qjSoPxoARs3bcJRohHf
mKAJXxrbFCnc5yesAb3eS+HNV8J6kltyz+bujZUKD5WXh1qbVV8x3lm72Uq4
ZSscaODZ1VsRqtEE+Pj4+foE+vkDrQKCQmr7hMEKRP1NE1U4A48UF8ctR4Ti
JJYIkcn7g0UEBugD/HWATdg3iXGp8TGgPWFAA6W3QqQ93iqFWnQa5tnSszkO
2KkG74JKpRLNPdmhZD8iTo0LUVA8CTlHpZFQ6rImJ+qogTQkAaEpWKgnICS0
fduIESNgsQJM5s6dS5s6odp8KAriH330ET5Kjx49unTpggegsQw0f3K5/KXl
Xf+X5U/6FwWi0hZdNMES+ACDDpWErDloN+29BaFFNxCa2IZItmhUQ98JH6jn
wbD+l7buqrv5DrUUNJkWV+ES3IW4B5mNgwYNQgMNSxaMAu0Fn5k5cEBQWKje
3w9godcFCZood3UvR80uueqio2qdKnxRetHsrMJJaTnv5pYszSj6Lqngu+i8
ZQnFa8PSfwhJ+SE09ceglGVB6csiC1ant9mVVb0nv3pfXtu9OW12ZlVuy2i7
NadmVWmHT7v1XzBm/PwO3QfGxmfr9AG+/n5+wb7BYf7BoUER4bEhwZFBAYHh
EcHAh7iE2BjQ9kS+OXJmdhZHvFblpOZ8U6FRI2E0Iezfv39N+3b4dbDoYQug
QL7KtSXvuvdWcrYcEMRnoQAucDYsIhxNanEpX4CQm58HrYFOA6WRk0OAN58J
T4AAqOEON/x8+QI67pAjyM/Px99Pp1Z5tWzerFmLOJcWY52FDTI1WMQBT78h
+oAUv8Ao/4AQUdlBPLQ6nUZcXgd+7uNLxQSHxsbGAyWKikroyMsrSE/PBMsA
pvAdDQL89LiDQgko0Gv9ggJCASDh4ZG4VivoFF5KkJ/mzZsCqbwVLcA68EjU
UUA+jQ3eAxCiahECIJFW+AL9kI3cCpFzdYMgHa+CHJKgQgJdUQItzSBbg4gK
TqE1QXVCfUMtohFPIANepoFC4DFwI4IIohBGiJD8CYjAu6JBDTIuYMeR9zka
woBG0/x5WsyLP6H7hAAUgXYQGYDQAj1agGMQgzVBKIGiyPogrKAGgro1oCyA
GvwJ3jhu3DjgA2xVcEsag5s0ZeKIUUO7dG4HSz8uNlvp299esd1OuOaqWuuu
fzMgsmNmQfuc0v6pBaPTC9/LKFuaVPpDXNHymPwfwzOXh6avAD4EpC0JTP86
OOO78MwVUTmrY/JW42x04YroorVxxWuzW68qb//dkHGrZ763tmufMaWt28bF
J/P1rdHh0eEh8dExCWDlQAow7NjoxMR4kaLHJcaL65n5arP4pAQ+hQwmBl5L
dZu2aLwGDRgIA2TYkKGgxAP69cevhllBpgRfAu/O++qbNubvHA0x36ykuTt0
BOYDd8UTwPVLxx0Da6HTvFOOM4BAUH1UeNwXTXBmOn9jKDM2OsZH56tRCHq1
TqnMaKR43VW72kp11km3p5lmgEKbqNIGaVCMoNGoBRyCiiu7Nxr/Fh50II57
hQQFw7aCFYMC01PT8Krxc2ChQAH9gRHBgJlgHDC/fHz9NTqtSlAD5Z77BxCz
BAVERYYmJyXga1JjgS9LJkZsbCyNoQMfaNYcfibhBs23IaOSZueSxyH8dkIV
coYMlKAdoMh7CZ1FBJALtuXs7Ozo6EjOiPAyATW4EGfJrRkSYV/AagNJRmto
3L7cIH+SRUilUlhnwHO8fOoNhimB71spCtCAHIOQXtPCf7I40p4LtAOVFhFU
CXIkQvSA4sAKXFLyXAhhyBKhKbWGGbPUm4F0sEoarJ89ezaw4t15c+e9/978
eXNALCdOnlPZ+QsnzV4r5aUG2o3eAbPU/jkRcTEJ6bnFlb1reryXVzE3u/WC
9PJFuVVrkkvWxhWsjc5dFZH9XVDqV2GZ3wMiIrNXReatiir4EUdk/vqovPUR
mctTi3/MrfqupP1H42etGjtpYZceQ2LjkpLAFiIjgQ9JMXEJMbHJ8XFQGaAB
lBSPCvVMShL/TExEOl+WkJjE/4jn1ndeTi5eV7cufIx+5PARwL03xr3er1+/
4sIigLDCi283AN3EC4+OhC0fDNLOfXg25SN9Hnx3oxaeHi351kU6rlaR4Xw9
fmpyCrQPysv7A4tLOHCXlhUXlyYlpEaExgT6h3gq0lxbjHLTrbZWnXbQ7nT1
6NbMM6KlwketEXct0ekBJkADAAUnJx7i9gciQOG+AC6c4v4Ag4L5pJSsbL58
O5sPZ2fnZqXnZCSmpgA0QV1g+uEAL/IP9INmh4eHxsXF0GuhsVja1g0vIVoU
GsjGr6bNYWkWLgQwS65FQAYQ0pg7OBV5IwFo4JlpqyZaF1BXyCMNt8hENwLk
rAwoAZJgZ2dHve6IyGQyNIKIABxAkvEnDGojfzDI/wgRdddoAGPxwoG9YHHU
S2Bo6MEEoLZgbqD9vXv3phmV1EbQ9KdYUcjApNU05FGEnADQigzq7aTuI+Sk
sQ/quKCBDyAJLqfeLcSBHrA70ARPmDBh1luz331v/sKFCz/8aNGHn30/ePx2
G81uK811R/Uav7gPYpJrUtJSMzJz0zKLcoo7dO07fsTr84aMXlzW5quyms0F
1dszW2+OAyBk/xCesSwkbVlg2g8BaT8Epi8LyfwxImtlVNaqhKKN0XkrkkrX
prdeVdxh5YDRa8dMWlTRpjMHgPhYGOCRYbHR0bFks+MJ+VyQ9DTec8snm/MQ
Pydb9KGSkcV7yRKS+BAPTAzeQZfBp6OnZ2YACbv16D5y5MjhI0d07969VesK
7hUhOQmq4aXwRj1v0Ig7Q3B0dkL1dq3nxr1+uYv7l2n4rBU02dwfYCRfjJ+U
koxXCsOkpqamW/eeg4aO6tilZ2ZWntonz9F9tLNmnbX6kr2wu6mqn0qX4AP2
ERkRDesIgBcVB6sGaq7Va/iwhR5mix4hAMPdozlab8TB6wOC/KOiIhKTE2iY
NSU1ITMrNS8vR1wzlUl9CKGhwQGBPj6+Gj9/HVQchcfFJkVHJURFxguClnZP
oIn6xDTIHRm5NKRJL0AMWmBFPtVp5SBgwVe0f2jmtsHHMg3EU68FbfxEG7XQ
QAaqLiACdZh2jEKTR5MfyHEErQ0HfwBcGHyk/BsV8b9X/keIwDukvcJpGbiB
RRBRhNryGtitG/T0tddemzhxIu25+cYbbwwfPhwNIow+VHsDUPB+LlF9kGLo
yaQ4hFzaGiZRRD8XWuJhWLiHWwMoaCIWGiM8RnV1u779Bo0aySdfffzJ54u/
XTtuznFr3QFL7U03ny3p5SsKywbm5WbHxybApg6NjErKyKhq065rj9HDRi8v
b7uktGZVeaftxe135FXvSCreEJO3NjQLpsf3HB9yV8cXrE4sWgu7IzJvTWT+
2viSDRkVW8o7res+ePG0t7/p3H1weas2SYnp0VHxsXEJaCRxQNeASIAI6D7C
5NQUKCxCxKElYq5EHPGJCdGxMdDokLBQsHCE0FHkKSwuqm5X06df32EjhiOs
ad8O14K0u9WvZ+dgL5NbW1pJzS0tEMptbRycHF3cXBs2buTu0QIwolAplWqV
oNWgEYeao8D8woKadh2GjhwzYcr0iZOmdeszKyTlM2ftRivVVUftfg+hv94v
MSQ8BkCUmZWTk5sPaoAHjYyOAghwN6SB3AtQZDT/IqHh3GtxWASfixISxgez
klOT8PlycrKAD6kpCXExsRFhkeGhETFRsaAKeOetyosLC3JANKgzGyTL1yfI
24vPuqApT7TtGrk2RbGoAKgSZFrS7BcaK8fdyd8U4QBZE7QLJO3GgkcFczBY
GWRoUGcFeVlH7QVPoO2igA9kd6BiAxDI+YzBwdpLTjL/j8ufNDQsLS3xYsnH
FHVEkMcYWgAO5vD6669PmjQJrTlC4MPYsWPHiDJs2DAY3W3btqUJ1WQpAC6g
5oQPhlV45HGIyCeqBJohcayt1uspaiatBqXLacSEUEJcFVhSlF9WWlDWvm3l
gAEDXp88p/dr26z1R0yFW066LZW991a0HVFUmFteWJiXxSdUhEWER0RE5eS3
atWm34ARH3fovaSs04+lnbYVdtxb2OFgdpvdKWVb4wvXxRasislfjiM6b1ls
/hqgRGLJusSSNeAb2ZWrS9v90KHXV0PHLureZ1xBYRlZF0CAqLh4HIjQKmM8
LfEiahOJTSGCX0QUmpyBk6aQT29kxssBtIIm0bp40DO8H2gQFAQfAnyY/Dca
+pDJZyDvtRDH98lFOf6kNbm84yg3B0W9PeutWbOXV/bY7aLbYKW+7Kjd20LV
SyOEQ23DQ8MS4uKh18AzmAP4k3f3+fHZFFER4nq6ON6XkpyYwgcdwvmnCQ7k
zD+Mr9EMB2GIjAyPi4lPFOeVJcQlAzHj42Iy0pPT0zjCi61J+6qqtkXFpTl5
fE0fPivtr0S2ADQdj0o9iiCNYCOoADQwSqPneF14V2Q+0PZtCIEDBo9GtNMT
7eNm2LyJNnmhd0sOVGkREE3qdnBwABqQE91X+x+MKCH5c4OeeHWwMho1aoS3
im9Ei7tpF29y+ANKjOqHEHFawAshryDkLYQWgRYXFxMBoJX7xCLy6wiNXFA6
zYwiOkEd1OS6EHFci6LIOSphS1ZGdn5WQXZaVnF+Dp+R1WVQSaevrHWHLTS3
7YWNw6ff/vjzbTNnTOnZtUtRXi51G8bExKGtT83MyStpX9Vxcqv2C/Krvy7t
tLWs676ijgfy2+3NrdmZV7M9u3pzeuuNyWXrUsu3pJRtTihck1y2NqFoZVzB
stSSVWklSzKK327dYUZJRa/0rEI+Szk7KyMzOyk5lexrsrhpWSvvgeCLCmOf
H3wCOX4XwSABBXkBxc9EThpkJGuOvCpxZ0ppqWguaXoP0WY0iKjnwA1yBQaN
wCnaS5Hc+kERoESw3aGwFaVlvfrOquj2E/fHpb1mp96l8OkHiIA9IajUep3G
38/Hz5fPpfDz8fXz8Q8KEBEgFLwhDPQA3AAgQAfi0ZExOMTEWMLw1OSMzPSc
7Mw8fBHeWZqRlp8HhpEuTm/gLIKTxVxQlRzqhaaZMEij2ZLQfTAEmhXJx23F
/Zto29ao54IbEbWgFZoGM4Qm2eIqWhxqWDKMl0k+VMlBIo2uEiHBHQGtMDTA
LsjvpdF35T8g5NAP9RAfjk9fjI7GBzW47wCLoC5H8tQB/cWHo26K6urqXr16
kesPGq2m3gnqw6RZE+QWgGZJ0egnLkQiMpCLCdq6i4RqAlVFAw8xWCvpqRmp
yWl8nQNQp6hDXO5bTj6HrFTXwaireu5774P1X325eNGiT954Y1xV68q8nPyU
pGTRTklJSEyOS8pLy+2WWzohs3heYfXK8i47y7sfKOq6t6jT7rx2O7Lb7Mxp
uye9Yltyqy1JJRtji9YkFINOIFwbm788seDrmMy5sRmjMwr7FpZ3yC8uA+9G
WxwbjWY3/v+x997RbV13tnDmrUls2ZLVeyXFToC9A0QlQBAESAAkAPZeRarX
SLJ6tbpk2bIkqlfHlq0uUZViUbdkSe6O4ySOHZdkksw4+fK9P963z93iGT5n
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
0/GBNavTWbV6V5RmMSDimcivBqk7w1N3pKZXYJGYMoxZ2bbK8ooF8xdiu3xp
28tr16+bNGUy1pjI1tQa05J18THJcbGp6mhtdGJuum2mo7DFU3k5v/ZuXs0d
gEB2SZe9oDO74Iaz+AbohLWgw1p8I7vyvqfhPe+Ed3wNd/Kq212ll5wFJ5yF
r7tKDpTU7a1t3lZRs9CdV5Hj9OS5PblOEe4IvTk1NRnMC7KbkJicmqYzGqy5
OXl+b4E712W3ZYFmGPUGcAadNl2bpklLwW+PDRLhlsGqyPDQsPEi2jp4PFQA
YWFQ/MKAR/wKEIaBAwdDO/zRj57u33/g2LEBeCMllzb/cSHWAYFLwCIAEWAR
z42oGhMQFxEVm6pJcdizAfWYx4WLRWrD9u3bAfJQGLERYEfAjkznAtGYRX7w
DCMWaBOg/ZBKhwQQqhu0KlDjgNT3DJyThSWJDKx+XFlZWdQ9AAhYCTT58tup
Y+IzmSLEHGHsWSwXgOdlZAUhgvBF1Q8XjPsGfBg+fDjYV//+/ekhegIRf330
NOTSxgvKyvRYupWxSeFm4nlm4uO2Q7LA3idNmoRFBfIwd+5c1qzes2fP3r17
WXIWuxIQg9VoL1++DNAASrz++utvvPEGTo4dO7Z+/XpsWEuWLKFlg1GUpBY0
L2Al0CCJeceqi+wx6EynjixyuUQnUJxr4xKtYYnz+kXeB0RA0QCLSNaUCfXZ
ak7Xaw06fb7HC1xatGTxps0vvrBm3fTpM6H126xZaYmpCdBjokVNhsioeHWi
LUZbo7GtzSp4Pa+qLb/6lq/mXkHdw4JGoMEjd/W9rLLbWaV3rUW3cHTVPvBP
eFs86t8tbHzfV3/PV9eVV3XWX3mkqnF30+QXa+sXFBbUZds9lowshbSna9NT
0rSpJrPF4XQ3N03BZYCUlZVV+PL9PmhBeb4ch9OSYcpUwrghc1AURLNUTWJ8
gsi/FgkaSqE2ooTd7sjJcUHVgnIRGBg0cuRobJEg0iAXYWEhuFdMgwqKsEPR
GBjVTkXjqYHFg4aGjQ+NAFgBi3DDIbCV1aIiPWZk5cqV9GWD/oEcLly4EPs4
JggSSnWDeZqyRjFBgzYraWlkewuG32MwW4e5e9XV1QyKK+4e+CteTEuFqKiv
VM5nPgVBAANKblNTE20X0i3CopQsR0AjNgsR0HVOEwQtKjgCaen3YUG8J4rG
3zK+AxEgq6QQwFuq/1hjQAxSC6xM7OAQXswO0yuYr7127dpXXnnl1VdfBSac
VQaggB0xQCFwvm/fPmAI1BBsTwCQXbt2UQHBG7EaFyxYAKhhqx2W+KCpgYFS
1Ee4SbGNFxN5GIqPS1Vc4TgkqaINQbGzARG0RURqWtJ0lYJkZtvMFhP2ZbB3
X7530qQpq1et27zppVWr182eNQ+/A3u3KNwSFxMtyqhER8YkhUYZohO9aRmz
La7ddt85T/kNX/1D/8SHBZPf8Ta/62l4B/iQXXrbUXI7q6gjq6TdVX3LXXcv
p+ZWbu2t3OoOT01XQWOnv/ZScc3xSbNPrF5/rqJqdn5+iVC6RSk46ErGLHuO
11ewdPmiNetWLVu+sql5alFhZXFJJWRIcXdWKjltRR6PCwqIRpus0SYlJEYr
novYqKgYQPiYMdAEA6BWACHB+tPStOTbKlVEQODogMBR4REiiQGzJqxJmuLQ
5JehaPQK/40opTu2vv+g4IFDR4wcPUIdqYKAiwLybhdD6xn6jiMklLU7duzY
AdCYPXs2rg2TIh3TNFPg7bLn++NSP4qlUWbiEGHo12ChQnwL/iqz/xgUATQA
OMyZM4fBuvh27ERgqjRvLlq0aLkygFq4EiZ44k8AE9YoAwlhCSkZrwtAIzgQ
KMgiCKFUNJ6YK/+WQUcG8KFXr164ddhxCL840sLM/HqsBCwAPINpxfyyxBxQ
HfO1bds26BEgDA8fPvzFL37xzTfffPnll7/85S8///zzTz/99KOPPoLGAdwA
r8ArAQvQNcAicLJGGUCJ559/HrPM1AypepBLUCFl7zYqyDRjctIZpxceHqlS
JYSr0kUyuAIRA1UdgAiNvgqLOTPLarNnWswZWRk2i9kKLlFfD2R7fsOGTdte
2fHCC2uxzLAPpqWlxMZGx8TFJialJCSmxcRro+MdqYZZ+qxNmXlH7cVns8uv
Ompu5NTey619kF1xV0BEUWd24bXMgmvC04FHcVtWeaetrCOr7Lqz4qan+nZR
w83Kie11U05veLlr7qI9pVWzHDnFVqvLnuXOzxMw29hcu3TFwvXrN/54zoKK
8vrCovKy8kqARGNjfXn3cLtzAXEms85g1NI3CjQQCkhQiBIrBdUjFPwBR1YR
FNmUyXEZFn2+N1eUblBsESm6MkDEoOiOp0JFdOXw4ImjxsYEhoQHhwYJoyj7
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
t00ZRsUQageXKPR6Jk9qxgWfOXvhytWO4ydPzJw9A1qJiNcNUYcEhIFOxMTE
iNwKozVNm5WcVhgdPyUqeYXOcSCrpDW//q3curds5dctxW2ZReJh9bdn5Leb
8q+K8Mv8K+meS+meKwbPVV3OJZOnzZTbZnZftuZf0rtPptr3xZvXG+3L3d4l
s+bvnPn85glTl+YVTWDHjRx3hdWWn2mDsLgL/QVFBYUelzvfk5dld0BxMppN
Iu8yNQEQAaCIT4hmyHREeFRoSCQeqkhRsTo5JY0zKMJO7BNSbEcGqK8BIqBo
ZHlbmiYtnLtg8crVKzZt2EjT8Qtr14CosysNBBn7Ais1iX4lCxcuWrSIZd/w
X8w47j/bmkBaqfsDDSCe3CMwiQJ4z5wBjdy3bx/IBuCFQTWMvqNXgqUhMFi3
EJ9APwhkn8uM3bKIJNLbxSh92jpY3IxDhnRKPykjV/EkkBZHKGUgyfRo4AgK
0b9/f6gbT+pV/pUhWQQT36BosNJ4YGCgKFrSXTCQmxENxdzNMQuYHZqYsKhI
DrEMwAGWLVsGoWO/JJysW7eOnVvBIg4fPgyqAKAAehw8eBD/JXq8+uqrWEt3
7twBtQBKQPs4f/78yy+/DKDAtkXVhgSYDTWYRCmr5SveeHN8UmZg9EwoGrRF
DAt7ISDYBsGJT4wDSqQkJaeliCqsOr3g1UaTqBxlMqZD7ponTF65Yu3BA0dx
Jdu2vzyhud6Z64iLSwgaHzZ82Jjx44M1aUlmU7rZaDIbHYnJOeqEsrj0hemO
3bbi1qzyDrAIa3GXpeCKMf+SLu9qursNmACIyPBeMnvOm1znze5WvasV1CIl
+1Sq42Rq7im15bDafChCt1ut256efSC76PWaqVeqJp9esPr6pNlv1k/aN2f+
0eapm4pLphYV1RQVlhUVFFeWVOVk5zudflu2x2Jzag3GNG1qTJw6Lj4KDzr9
xweGhoWqgA+REdGRqqjYOBH7ihkUgQHm6tDklxldCYiwuF+prps9ffbcFauW
v7z1JWgKSheMPRBnzAgAnL2VMS+sIou5wyRC0pnbCxAAGgC62ZKVwW8MfMVM
sdHzggUL8K5Lly7duHEDewEoJSgi+Ab2EVHDMz+fgdwkGGAjLG6MnYgeUg4m
XDCsTvpYMfuMCXF0D1ZP5SJh/DZ95Vi6uCQ8g8/HFeIWgTyw8xd0jT59+sg0
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
2wdEsH/BypUroXJef/31K1asUGtFTAl28WMUARCDKwVTMlm2kZlZmC20YKR7
anuuT0gTlgkaPZgpQArBO97aH8pAVL1ErulVVUCJXgzALq58E4rGYdV7oGg0
bj4w3TK+UVlJWXFRqjCVLCwrKVW9LFVdozrDbE3swUewLopKpDKRkJ2nyDTw
nG5150X/ckVjtXAG+OEATGyWx2SlStpwmIpChQ5aG4CnpqobWETXbr169Kz7
3F9TUVmNv8rP6cSRR44aOOTMnkfMrTpiQ/WR9wMfeg3f0XfkE0cc9wydGiAP
gAKLD4zEhvaRbiI8Yc+wcTuGjll70jn3Dzvl5fKuexJVvy+uenfyt+9bdc3W
m7fcDg7wzPM7X3vzex+8/8OffPLp73//e6ABCMP/eAMQAeXiL3/5C/b/+te/
/tGPfvTWW2+98soru3fvhmZx1113YZlg9SfQRTyf6Q+uCGIO7GMoNZMR2iw4
w4r3mFrsAE79It1w2asMJnAAaJNhpmlhaSk7YrD8EeMi1DqBNwW3I6tf/F2G
8AHTG788g1cVOogbBNEG1EPRYAVCNje57LLLFixYwO6KGLi5s2bN4lqJW8wY
XZqYqI+wmR3lhesLK6tAati7B89sz0pwoAhzQWf5QYbUsh6d7enJXDAv3WpI
734jO3SfS49GaeXupl2urqg5Aa+2aNUcRAIQUV7WCCyCdeBpPVAdNtbMIbug
WYapB7SLEpFUTYIeDYZW4gxsSQ8yRtsvHXDMHpUXFbNd5SMwsIbip0j3serW
vWd3EJU+vfv0Y+evmqpaIIQXw9mhc6d21VXdu/U4tmvvadVH3FBz1H1M6gQm
HHfG68ef+QaeR3/r1VGnfVepGXgGOOCBjbTqMf6lo8c/Ovqk9efNefKEc75X
2vWlWMVngIjx37pr6bIbrr9u3datWx95/LHde19++823PvzhBz/7yU8/++yz
P//5z+ASf/3rX2miZMHqn//85++//z6r0QIftm3bxh4WtFkplQ/bYAJM0AAO
kEUwkwsvAT2ow3pd1KexXAyrxABqsBM/Dtt70SCs/m6cBtTpWBoxHo+zmB7/
ZbFNhVlmK1X+vQaoGjtlqNkryzirxRJTGrGkYhVgig0z+u+77z7WEMM8wRIA
aoG7TEeV15luLJ4xQ6CAsCnV0d6AjKhnLnk7Ezyp2nMdp/yy1zBrEXC91hzg
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
ksaenixZUOxZROlabex1mezo1Zzv4dXXSluDu/Xo3rki/REkTq0PbwNtLG2W
qa3q1KV9l6oOPXqlq3R27Ta6U83iTt1vqh18b98xTwyd9OLRJ7+E56OAD17v
72GTd3NjyITnB4/fiechHos4etxzoyfcsWjx5kXL7jj1/Lca1e5NdP5lSdVb
U2fvXLPu7i0333bLbbduuXXb1lu2bbvtjnvvvOv+7emK07feeuuWLVugXKxa
tYqhTUuXLmWzPJABZlKc5w1sM7cCQMGICKgS7Pa7aNEiKCasPAmIYGstunKY
+8kqcyoDwhAphteq+xvDTugeolWZ4ZSACE5gO3Vxi8UussMZBwcRpBAEZCoa
NPIrmIrV8rHegTng5mIFwX3HVMEEwAKBnYyvZnlD8g3uYZ1nVlNnjh6LOLGL
FrN6iRK0Pyifmr4DhjsyopJubjkoOW3YKzCtbpQ3Li4pA9svLmlUWNyppNmU
0qr3E13+UFT1RrzNmlTjsY2a923asl9507pUWY94UbeccCc8csOd0xu57XNy
2qYfee297cNz8jqEElWxgtpwsjpZ1L20Sb8mLQY1bT2kWashjVsOKm86oKRx
3+LDehceVhdPdY2masPxqrxYRV6kC56xHSmowbuSJT0KitOfxfNEkzU4MhSr
TJX1SlfkrhjVueq46h7j+w08Y9jIacNGTek7+NQuNWNatj2yvHn/sqZ9m7Q8
AtvN2w5q2X5wu4qjO9eOqqwd26nm7PZd13Sse7Bq8FN9j9s77OR3h5/67tDJ
7xw16S08D5389vBTvz/s5H1HnvT2oPGvDxz3xsBxr+EZ20PGvT58/JMLVzxz
yaKnxk/5sLTm9UTn35bX7Jsy65lrrr1l7dp1a9Zee+2a1avXrd+88aZbbr71
5ptvZqGwtWvX0m3NZrsQ8EsuuQRQwKar3/YGS8mBQrBWIUMrSSqgleDtoB/X
XnstNRScZPny5UCbhQsXgnIAZEAzhg0bhnnCVh1soUjPkW4xvcmECNmuMT8j
3qBfgxtxz7RUL0Rk1Y2cA4AI51WxCBoiGIaNX1gOO0I37hQTsSHjkH3APhYR
oASmDau+MyqGxUOYwcfMPvano8OUBZ3ANGydN0Y4q2Ql68YrkUr9axiQzyA6
riN25qRdlqUlnhZaWFrStCDVtqD8zJIu7yQr/xKv+lG803PJVjekmi0pab2k
9PAl8aZzc0qm5xRekFMwLScxNSc59fPn2Hk5sXNzonick97GAUXTc0ouyiud
GWo8u6j14kTLBfGml4abzEk2n59stTDWZG5O6Yxo4zk4Jic5DcfnlszAnpzC
C3NS56ffWzYT780puvD/Xi2biee88ovxXpytrN3yll2vqz5iS8/hd9aNuKvX
sG0V/W5q2uXqotZLC1stKWy5INlsTlm7ZcXtlpV3urpN7Q2d6zZ27LOtVd2z
TXvt7TD4/ZoRn/Y98XcDJ/3HgAn/3ufE3/Yc86tuo36G5x5jftF91C+6j/55
j9G/xJ7aET+tHv5pzcifdR353sQp70+c9uGAyb9N1HwYq/q3osrXp8/dfd31
266++hqs8CuvWXHlysuuvPLKq69adcMNN0Cu2SoL+LBkyRIs/WQObMNNryXu
OJgk2AJ20tSAZ+AD9uBI4AneC/IAfABQkIRAScHZsB9AQZSAusFa94xMS1uV
vbJRinSl0YkFbFkalNUhiAMaJBIsu/q1SNs/5TgQiHD+lcWS2/iFmabB8AC1
92VGJIS3Z8+ebOQKRYMVhNhVgam+mDaMiWKdZJZKPsIbQAAGX7FVDUOa6fWm
yvm5Gu7lVnMFof9CYZDUMriaFGWOZKrA80jEUgWlycLDi5qeXlb5eqLyz+GK
XwMlyqreKq/aW16957Ca3aU1L5RUP19WsxuP0uoX8eA2/z2s9iX9q50lVbuw
gZf0KjeKK19wDravlnfdgwffzk/Bfn4E9nNbF3BY1xfLsb/m5dLKPXiUVb3U
uHoXHuXpU+0trXrlsKrvNqrBW14uqH47WftRQdWPU9Wfpio/SVZ+XFDxMZ6x
XVT708KqTwuqPuEe+xyr/rig64dltW+kunw3WfvjUMXPotX/VlLz3TPPf3T5
io2Xr7hqxXIg/rwFiy5dsmQZ/l22bAXEGasA6z6BLtJzAXBg2gX7DyrbAi/N
9Mb06dPBM1VW7jJvgDzwbMCHyy+/XAnCgIhp06ZhCpFwskEb7r56zdM6jW2q
FfQ8AQFIevMyB1GCMRJfvaj9s46DgwhSMm4zaY76Pu4O3Y50PLGZLw2YwAQG
wNCzSXxgTh/2MIwWVIFVkRlwxbYyyuBmghjOjNMqc4pxccxuYGAS7Q98Js/k
UsLBSCpQiHiqIFIQy43khGLRWHHzwhaTSit2FlT/Llr9x0jln5KV/1ZY9btk
1Wexyl9Fq38Zr/01NuKVv01UfYaHNpLVv+M2nrUTj1jFb6Jdfo09OMC+in/x
kk6Cbb5k365tHhDp/Cs880h7AM4f6/LrRMXvktX/jkei6vcFFb/GI1Hx+3jF
v8cr/oRn/Buv+EW4+vehrn8KV3mPij+GKv8YrfqztvGMbXzlSPWfuR/P2M6v
xvF/CHf8PZSvSJf/TFT/BdfQqOvuyWfdeem8a5cuuXz50mXzFyyaPWf+JRcv
mHPxwvnz012xZs+eDZFnZhboIkPosTSw4geYA5Bhzpw5OPLiiy9mHUt20QIJ
gZKCZ2gr69evZyNvoARAA8jAPr/ACpwQjHTkyJHQN5kAq1qpuvtMGpIhnbEQ
NFRqabMqs23cmR3B8YVCp3IyAyz1CzPvnsZhFWqQnZk14tgsjzXlWNucmik2
2N8Ts4jBckzwrKurYz0Q+vKob9I4SVYJzqCASUwM7le2Dj1ZxC7+6/kZ/QjG
4qJoLBFNJmLJUDIVixcell/UN9HiypKKp0tqX09Vv1nY5Y3iyjeLq/cV1bxX
WL0Pe1JVb2NDD/wbfBRUvoUHXi2ufRcPHlaYPsk7ePBfbmin/VentR+E/TwV
zsyX+Fxa+25J9Xt4FFa/m6p6t6jyneLKt8sq9xVXYP/7hVU/KKp8t7T67ZKa
d5LV349Xf4BHYe3HqZofF1T/CM94JCo/TFZ9hH/tA3vwgFoBCpGo+WFJzSdl
OLjLu6U1bxZVPjds8t4Zc+5asviaxYtWgDwAIi6dt2j2JQtnXHjJ7NlzQQmw
xDONgvUkzzvvPJAHgAMbXgA9wBbIHwAUZBrQRyD7wIfbbrvtnnvuuf3227du
3XrjjTcCJaCz4CVaJ4AVABaccNy4cQy4ZdNerRqMhFFHDGkW3BCLyM0cmsxf
qZT9U4+DhoiwNxQaQQeoZ+2Ps+wt453UJxpMALA/fPhwcE4Wq2RGEuYMlhsA
BfaTSGDYqHuGVlLfVLFi8kmaF5xhg2S4iNBkXeAPb3+yIJpKhJPxcKgoGSsv
KS0qbJUo6hs/bFS4/MRIk5MKm04qbHJqQZMzCxqfk2h0ZrTs1FDxZDzyiybp
kZuamJMcj515hSdxDzZyCiaES07GG5ONz8C7sI3n2GGnRUpP4dv5LhyGf/Eq
34hX4+Xf4jF64F+8saTluY3bXdC0w/QWnWe2rZmLR5uq2W1rZjfvNL1Ruyll
bc8tbze1ScfpzbvM7FQ7t7b34tq+S6r6Lm7XfU6rqlkda+dV9ri8c691Xfps
rR54Z92Ih/qPeQyPwSc+fdSE54ZO3DnspOexPfCEJwcc93i/0Y/2GflI72Mf
xmF1x97f69i7+o65q/9xd58x65Xz5u4565Inpi9+evr8O5YtX7dsyWXzLl0E
fFiwaP7CxQvmzp130UXpPnrQF+iRBD7gmaXG2NQA+I9/WR0CAxwD+AAKAZ4A
EABhYPGH66+/njYNwALYBUsUAhxwDNP6cBLwT0ZUEiLoy6AlilHWNECxTSqn
qA32s2pyFiIOZBy0okFYCPlDtSOwzbBnUT6mf+ImAigg8v379wdVYBV0Rsph
CrH6PZBBjfZUwI13n6YGZjrgzCl/YD4w5Z8BUTSDsFQLrdYELi/Y6XOfS1o7
jRdE82KF0cLSwqKyVKq0oKC4IFVU2Ki4tFWsqGlBaauSsjYlxW1She2Sqfax
ROtwtEU00TISbxGKNgvHmmMDz3nhJjn5jfiMR36kKR74N17QurS8c6q4XSLV
Bo+CorZ45ltwEjxyQ43xwAb2x5KtsIFnHo/3cicO5s6yRl1atunRrmPfLlWD
uvc6pkfdiNruw7r1HN6+U7+mLaqLytuVNulc3qKmxeE9u9YOGTJ47ISJU8ae
dM7QUZP6Dho9aPD4Y4afO+q4eeMmrjxh4tWnn7t52sw7Z156//xljy+54pll
Vz13+TW7lq/cufTKZxdd9hR2zln0yIy59+GY8y7aOmXmlqmzNl0wZ9O85bdc
cc3tK6+/5cprN628bu3ihYsWXjp35qxLZlwye/rFF1406/wpU849++yzGO0A
lAD4Q4NYsGAB1QRWL2fIE7aJCZddljZybtq06b777nvwwQdvvvnmFStWYKUA
pIBdkI0AT8AZcDbsWbhwISscYs4wopLNlNk+iSote6SSPSoaCnefxWxFeoMQ
IcU5O+odX8ZcKQS2fg0s0zRd0neg5AjlOKtCLDtyssgb680yHQ/vwklUA0TG
RhJI1lgQY1HUlgJuVc2Jr1owkUUC28l4+oBYIv3wfLVlpSWN8CgpbVRa1viw
kmalRU2Ki8qLig8rKC5JFBbFE4XRWCocSeIRiRbgEQon8vJj+aF4Tk4Yj9y8
KP/FYQWp0qLi8lRhGZ5LShsXFh0GZQYP7E8ki/lG/IsDsAcbOFs8UYSNZEEJ
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
AAAAAAAAAAAAAAAAAAAAAADwN3kHrBzp8g==
    "], {{0, 253.}, {353., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{353., 253.},
  PlotRange->{{0, 353.}, {0, 253.}}]], "Print",
 CellChangeTimes->{3.9549998221456337`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"c82a1fcf-33bd-e74e-866c-ce5d05674972"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
InitializationCellEvaluation->True,
InitializationCellWarning->False,
WindowSize->{700.5, 717},
WindowMargins->{{6.75, Automatic}, {6.75, Automatic}},
Magnification:>1.1 Inherited,
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (December 26, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "14.2 for Microsoft Windows (64-bit) (December 26, 2024)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"07f45638-d88c-4efd-919a-f5ca70f97309"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 247, 6, 106, "Title",ExpressionUUID->"93fcdfb1-a583-49fc-bc07-d93de6df1881",
 InitializationCell->True,
 InitializationGroup->True],
Cell[826, 30, 347, 8, 57, "Subtitle",ExpressionUUID->"c651d3da-35f1-417d-8300-82372e659e11",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1176, 40, 352, 8, 57, "Subtitle",ExpressionUUID->"848a9044-d4e5-4e85-af1f-0f327b6d8446",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1531, 50, 229, 5, 37, "Text",ExpressionUUID->"f4a9fc12-c802-4fd6-83ce-68766b8ecc86",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1763, 57, 431, 9, 61, "Author",ExpressionUUID->"78fad76d-2c59-488e-a333-3816a8d4e9b1",
 InitializationCell->True,
 InitializationGroup->True],
Cell[2197, 68, 552, 9, 61, "Text",ExpressionUUID->"0f600f28-f76c-4d81-99bb-0adf37b5827e",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[2774, 81, 15388, 322, 2764, "Code",ExpressionUUID->"4722122a-b9ba-4ce0-aaea-0eca9acc54d8",
 InitializationCell->True,
 InitializationGroup->True],
Cell[18165, 405, 2747, 52, 63, "Output",ExpressionUUID->"f67e5512-c54a-6340-bb6c-03c49d73958c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20949, 462, 2070, 38, 156, "Input",ExpressionUUID->"293914fd-3896-654c-9a8b-51fcb730c0fd"],
Cell[CellGroupData[{
Cell[23044, 504, 385, 9, 25, "Print",ExpressionUUID->"89ab4286-f699-aa4a-9e7a-91f84a8985cf"],
Cell[23432, 515, 359, 9, 25, "Print",ExpressionUUID->"f03f0317-ef50-6a41-966f-ed26aa262167"],
Cell[23794, 526, 500, 13, 44, "Print",ExpressionUUID->"a3502339-d3b6-6740-9609-cbe86f524346"],
Cell[24297, 541, 688, 15, 83, "Print",ExpressionUUID->"24640022-49b1-034d-b305-051cc4fa7cc1"],
Cell[24988, 558, 214, 4, 25, "Print",ExpressionUUID->"97b57ed0-66b3-274d-b59e-213d6b648505"],
Cell[25205, 564, 102281, 1682, 288, "Print",ExpressionUUID->"c82a1fcf-33bd-e74e-866c-ce5d05674972"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

