(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[     32381,        701]
NotebookOptionsPosition[     12374,        258]
NotebookOutlinePosition[     31134,        676]
CellTagsIndexPosition[     31091,        673]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["AI Based Organ Detection", "Title",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.953003261733726*^9, {3.95300460417626*^9, 3.953004616736231*^9}},
 FontSize->8,ExpressionUUID->"93fcdfb1-a583-49fc-bc07-d93de6df1881"],

Cell["Gruppo numero 1: Morgan ", "Subtitle",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003474049737*^9, 3.953003484651434*^9}, {
  3.9530045631258287`*^9, 3.953004568142741*^9}},
 FontSize->8,
 FontColor->RGBColor[
  0.7498130769817655, 0., 
   0.03247119859616999],ExpressionUUID->"c651d3da-35f1-417d-8300-\
82372e659e11"],

Cell[TextData[StyleBox["MC 2024/2025",
 FontColor->RGBColor[
  0.7448386358434425, 0., 0.01271076523994812]]], "Subtitle",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003573527338*^9, 3.953003577125852*^9}, {
  3.953003651797236*^9, 3.953003656006226*^9}},
 FontSize->8,ExpressionUUID->"848a9044-d4e5-4e85-af1f-0f327b6d8446"],

Cell["FOTO1 FOTO2 FOTO3 FTO4 FOTO5", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.9530036651012907`*^9, 3.9530036873334713`*^9}},
 FontSize->8,ExpressionUUID->"f4a9fc12-c802-4fd6-83ce-68766b8ecc86"],

Cell[TextData[StyleBox["Giuseppe Spathis, Matteo Fontana, Federico Augelli, \
Emanuele di Sante, Alessandro Mencarelli",
 FontColor->RGBColor[0.7496757457846952, 0., 0.03179980163271534]]], "Author",\

 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003704746303*^9, 3.953003733491577*^9}, {
  3.953004499788789*^9, 3.953004504095313*^9}},
 FontSize->8,ExpressionUUID->"78fad76d-2c59-488e-a333-3816a8d4e9b1"],

Cell[TextData[StyleBox["(anno 1, curriculum C), (anno 1, curriculum A), (anno \
2, curriculum A) (anno 1, cirriculum A) (anno 1, curriculum A)",
 FontColor->RGBColor[0.7448386358434425, 0., 0.02374303807125963]]], "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.953003950627871*^9, 3.9530039664070063`*^9}, {
  3.9530040032182293`*^9, 3.953004057822535*^9}, {3.953004513350209*^9, 
  3.9530045375131807`*^9}, {3.953009050826796*^9, 3.953009051460822*^9}},
 FontSize->8,ExpressionUUID->"0f600f28-f76c-4d81-99bb-0adf37b5827e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"::", "Package", "::"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OrganDetectionNotebook", ".", "nb"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Rimuovi", " ", "la", " ", "cache", " ", "delle", " ", "definizioni", " ",
      "precedenti"}], ",", " ", 
    RowBox[{"se", " ", "necessario", " ", 
     RowBox[{"(", 
      RowBox[{"utile", " ", "durante", " ", "lo", " ", "sviluppo"}], 
      ")"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Remove", "[", "\"\<OrganDetectionUI`*\>\"", "]"}], ";"}], " ", 
   "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Remove", "[", "\"\<OrganDetectionUI`Private`*\>\"", "]"}], ";"}],
    " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Imposta", " ", "la", " ", "directory", " ", "di", " ", "lavoro", " ", 
     "sulla", " ", "cartella", " ", "contenente", " ", "i", " ", 
     RowBox[{"file", " ", ".", "m"}]}], ",", " ", 
    RowBox[{"se", " ", "necessario"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", "\n", "\n", 
   
   RowBox[{
    RowBox[{"Get", "[", "\"\<OrganDetection.m\>\"", "]"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Carica", " ", "il", " ", "package", " ", "della", " ", "UI"}], 
    " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Assicurati", " ", "che", " ", 
     RowBox[{"OrganDetectionUI", ".", "m"}], " ", "sia", " ", "nella", " ", 
     "stessa", " ", "cartella", " ", "del", " ", "notebook", " ", "o", " ", 
     "nel", " ", "$Path"}], " ", "*)"}], "\n", 
   RowBox[{"<<", " ", "OrganDetectionUI.m"}]}]}]], "Code",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.953007083433497*^9, {3.953346987018937*^9, 3.9533470227652607`*^9}, 
   3.9533472666770353`*^9, {3.953347349800501*^9, 3.953347442440909*^9}, {
   3.953347489446157*^9, 3.953347491084337*^9}, {3.953347602533642*^9, 
   3.95334760289194*^9}, {3.953347685583802*^9, 3.953347686313628*^9}, {
   3.953347796127501*^9, 3.953347796934599*^9}, 3.95334784904185*^9, {
   3.9533480688506613`*^9, 3.9533480695970297`*^9}, 3.953348171582431*^9, {
   3.953348275626021*^9, 3.953348332065818*^9}, {3.9533484002275553`*^9, 
   3.9533484010106497`*^9}, 3.953348531701033*^9, {3.953348662124753*^9, 
   3.953348663168285*^9}, 3.9533490165919123`*^9, {3.953349218342217*^9, 
   3.9533492191611032`*^9}, {3.953349404958879*^9, 3.9533494054058027`*^9}, {
   3.953349509631791*^9, 3.953349510326066*^9}, {3.953349591806386*^9, 
   3.953349593574562*^9}, {3.953349648818902*^9, 3.953349659265308*^9}, {
   3.953350653633376*^9, 3.953350653963974*^9}, {3.954990688198567*^9, 
   3.9549907457769527`*^9}, 3.954990917679995*^9, {3.955008907376635*^9, 
   3.955008937379737*^9}, {3.955009053602071*^9, 3.955009063925407*^9}, {
   3.955011990837966*^9, 3.95501199165877*^9}, {3.955013172072826*^9, 
   3.955013173642239*^9}, {3.9550769756335125`*^9, 3.9550769804899864`*^9}},
 FontSize->8,
 CellLabel->"In[55]:=",ExpressionUUID->"4722122a-b9ba-4ce0-aaea-0eca9acc54d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Lancia", " ", 
    RowBox[{"l", "'"}], "interfaccia", " ", "utente"}], " ", "*)"}], "\n", 
  RowBox[{"LaunchOrganDetectionUI", "[", "]"}]}]], "Code",
 CellChangeTimes->{3.954990756106764*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"f05835f0-7644-456c-96d5-ef28f426bdf8"],

Cell[BoxData[
 DynamicModuleBox[{OrganDetectionUI`Private`file$$ = "", 
  OrganDetectionUI`Private`fileSet$$ = False, 
  OrganDetectionUI`Private`errorMsg$$ = "", 
  OrganDetectionUI`Private`imgPreview$$ = None, 
  OrganDetectionUI`Private`originalImg$$ = None, 
  OrganDetectionUI`Private`detectedPoints$$ = {}, 
  OrganDetectionUI`Private`editMode$$ = False, 
  OrganDetectionUI`Private`isProcessing$$ = False, 
  OrganDetectionUI`Private`updateFileState$$, 
  OrganDetectionUI`Private`organDetect$$, 
  OrganDetectionUI`Private`taskObject$$ = None}, "Null",
  DynamicModuleValues:>{{
    DownValues[OrganDetectionUI`Private`updateFileState$$] = {HoldPattern[
         OrganDetectionUI`Private`updateFileState$$[
          Pattern[OrganDetectionUI`Private`newFile$, 
           Blank[String]]]] :> (
        OrganDetectionUI`Private`file$$ = OrganDetectionUI`Private`newFile$; 
        OrganDetectionUI`Private`errorMsg$$ = ""; 
        OrganDetectionUI`Private`imgPreview$$ = None; 
        OrganDetectionUI`Private`detectedPoints$$ = {}; 
        OrganDetectionUI`Private`fileSet$$ = False; 
        OrganDetectionUI`Private`isProcessing$$ = False; 
        If[StringTrim[OrganDetectionUI`Private`file$$] == "", 
          Return[]]; If[
          FileExistsQ[OrganDetectionUI`Private`file$$], 
          Module[{OrganDetectionUI`Private`ext$ = ToLowerCase[
              FileExtension[OrganDetectionUI`Private`file$$]], 
            OrganDetectionUI`Private`importedContent$}, If[
             StringMatchQ[OrganDetectionUI`Private`ext$, 
              Alternatives["png", "jpg", "jpeg"]], 
             Check[OrganDetectionUI`Private`importedContent$ = 
                Import[OrganDetectionUI`Private`file$$]; If[
                 ImageQ[OrganDetectionUI`Private`importedContent$], 
                 OrganDetectionUI`Private`imgPreview$$ = 
                  OrganDetectionUI`Private`importedContent$; 
                 OrganDetectionUI`Private`originalImg$$ = 
                  OrganDetectionUI`Private`importedContent$; 
                 OrganDetectionUI`Private`fileSet$$ = True; Null, 
                 OrganDetectionUI`Private`errorMsg$$ = 
                  "File non \[EGrave] un'immagine PNG/JPG valida."; 
                 OrganDetectionUI`Private`imgPreview$$ = None; 
                 OrganDetectionUI`Private`originalImg$$ = None; Null], 
               OrganDetectionUI`Private`errorMsg$$ = 
                "Errore durante l'importazione dell'immagine."; 
               OrganDetectionUI`Private`imgPreview$$ = None; 
               OrganDetectionUI`Private`originalImg$$ = None; Null]; Null, 
             OrganDetectionUI`Private`errorMsg$$ = 
              "Tipo file non supportato (solo .png, .jpg, .jpeg)."; 
             OrganDetectionUI`Private`imgPreview$$ = None; 
             OrganDetectionUI`Private`originalImg$$ = None; Null]; Null], 
          OrganDetectionUI`Private`errorMsg$$ = "File non trovato."; 
          OrganDetectionUI`Private`imgPreview$$ = None; 
          OrganDetectionUI`Private`originalImg$$ = None; Null]; 
        If[OrganDetectionUI`Private`errorMsg$$ =!= "", 
          OrganDetectionUI`Private`fileSet$$ = False]; Null)}}, {
    DownValues[OrganDetectionUI`Private`organDetect$$] = {HoldPattern[
         OrganDetectionUI`Private`organDetect$$[
          Pattern[OrganDetectionUI`Private`imagePath$, 
           Blank[String]]]] :> 
       Module[{OrganDetectionUI`Private`detectionResult$}, 
         OrganDetectionUI`Private`detectionResult$ = Check[
            ObjectDetection`OrganDetection[
            OrganDetectionUI`Private`imagePath$], 
            "Errore durante l'esecuzione di OrganDetection."]; 
         OrganDetectionUI`Private`imgPreview$$ = 
          OrganDetectionUI`Private`detectionResult$["ResultImage"]; 
         OrganDetectionUI`Private`detectedPoints$$ = ToExpression[
            OrganDetectionUI`Private`detectionResult$["DetectedPoints"]]; 
         OrganDetectionUI`Private`editMode$$ = False; Null]}}}]], "Output",
 CellChangeTimes->{{3.955281098991303*^9, 3.955281121331676*^9}, 
   3.955281270137837*^9, 3.9552813023131323`*^9, {3.9552815339094267`*^9, 
   3.9552815468125*^9}, 3.9552815790928993`*^9, 3.955281684928117*^9, 
   3.9552819409773073`*^9, {3.9552820177669*^9, 3.955282092430031*^9}, 
   3.9552821297841787`*^9, 3.955282204853148*^9, 3.955282393994763*^9, 
   3.955282591162077*^9, {3.955282722445615*^9, 3.955282740835518*^9}, {
   3.95542074631496*^9, 3.955420785450674*^9}, 3.955420821488641*^9, 
   3.955421424230976*^9, 3.9554215305485487`*^9, {3.955421601494665*^9, 
   3.955421620945938*^9}, {3.955421669474121*^9, 3.9554216991077347`*^9}, 
   3.9554217411119204`*^9, {3.955421775649706*^9, 3.95542181280855*^9}, 
   3.955421846490926*^9, 3.955422007020713*^9, 3.955422051531575*^9, {
   3.955422697927453*^9, 3.9554227301746492`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"547c5dc5-9bba-4b5c-9213-7c9277541e4f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9533543590677166`*^9, 3.953354409860489*^9}, {
   3.953603643969675*^9, 3.953603644419939*^9}, {3.953603702832714*^9, 
   3.95360388536203*^9}, {3.9536182992528553`*^9, 3.9536183046858826`*^9}, {
   3.9536184287872543`*^9, 3.953618434017023*^9}, {3.953618603413994*^9, 
   3.9536186590348797`*^9}, 3.9536189924103928`*^9, {3.953620299438652*^9, 
   3.953620306514595*^9}, {3.9536203725685863`*^9, 3.9536204004775143`*^9}, {
   3.9536213455724907`*^9, 3.953621350229328*^9}, {3.953985790016202*^9, 
   3.953985802156034*^9}, {3.9539858353888903`*^9, 3.953985839591661*^9}, {
   3.9545628421352425`*^9, 3.9545628533780365`*^9}, {3.954677351724141*^9, 
   3.9546773530648403`*^9}, {3.954677478552121*^9, 3.954677480290784*^9}, {
   3.9550005166753635`*^9, 3.9550005424044437`*^9}, 3.955023253634687*^9, {
   3.955076671572241*^9, 3.9550766891105976`*^9}, {3.9550788588851414`*^9, 
   3.9550788591542377`*^9}},
 FontSize->8,
 CellLabel->"In[59]:=",ExpressionUUID->"293914fd-3896-654c-9a8b-51fcb730c0fd"]
}, Open  ]]
},
InitializationCellEvaluation->True,
InitializationCellWarning->False,
WindowSize->{888, 1019},
WindowMargins->{{Automatic, 8}, {Automatic, 8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "14.2 for Mac OS X ARM (64-bit) (December 26, 2024)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"07f45638-d88c-4efd-919a-f5ca70f97309"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 255, 5, 75, "Title",ExpressionUUID->"93fcdfb1-a583-49fc-bc07-d93de6df1881",
 InitializationCell->True,
 InitializationGroup->True],
Cell[834, 29, 361, 9, 48, "Subtitle",ExpressionUUID->"c651d3da-35f1-417d-8300-82372e659e11",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1198, 40, 361, 7, 48, "Subtitle",ExpressionUUID->"848a9044-d4e5-4e85-af1f-0f327b6d8446",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1562, 49, 238, 4, 36, "Text",ExpressionUUID->"f4a9fc12-c802-4fd6-83ce-68766b8ecc86",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1803, 55, 440, 8, 27, "Author",ExpressionUUID->"78fad76d-2c59-488e-a333-3816a8d4e9b1",
 InitializationCell->True,
 InitializationGroup->True],
Cell[2246, 65, 561, 8, 36, "Text",ExpressionUUID->"0f600f28-f76c-4d81-99bb-0adf37b5827e",
 InitializationCell->True,
 InitializationGroup->True],
Cell[2810, 75, 3199, 67, 306, "Code",ExpressionUUID->"4722122a-b9ba-4ce0-aaea-0eca9acc54d8",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[6034, 146, 328, 7, 82, "Code",ExpressionUUID->"f05835f0-7644-456c-96d5-ef28f426bdf8"],
Cell[6365, 155, 4930, 82, 51, "Output",ExpressionUUID->"547c5dc5-9bba-4b5c-9213-7c9277541e4f"]
}, Open  ]],
Cell[11310, 240, 1048, 15, 34, "Input",ExpressionUUID->"293914fd-3896-654c-9a8b-51fcb730c0fd"]
}, Open  ]]
}
]
*)

